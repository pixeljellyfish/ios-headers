//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreSpeech/CSAudioStreamProvidingDelegate-Protocol.h>
#import <CoreSpeech/CSXPCConnectionDelegate-Protocol.h>

@class CSAudioRecordContext, CSAudioStream, CSXPCConnection, NSDictionary, NSString;
@protocol CSAudioStreamProviding, CSTriggerInfoProviding;

@interface CSAudioStreamProvidingProxy : NSObject <CSXPCConnectionDelegate, CSAudioStreamProvidingDelegate>
{
    id <CSAudioStreamProviding> _audioStreamProviding;
    id <CSTriggerInfoProviding> _triggerInfoProviding;
    CSXPCConnection *_xpcConnection;
    unsigned long long _streamClientType;
    CSAudioStream *_audioStream;
    NSDictionary *_lastVoiceTriggerInfo;
    NSDictionary *_lastRTSTriggerInfo;
    CSAudioRecordContext *_recordContext;
    NSString *_recordEventUUID;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *recordEventUUID; // @synthesize recordEventUUID=_recordEventUUID;
@property(retain, nonatomic) CSAudioRecordContext *recordContext; // @synthesize recordContext=_recordContext;
@property(copy) NSDictionary *lastRTSTriggerInfo; // @synthesize lastRTSTriggerInfo=_lastRTSTriggerInfo;
@property(copy) NSDictionary *lastVoiceTriggerInfo; // @synthesize lastVoiceTriggerInfo=_lastVoiceTriggerInfo;
@property(retain, nonatomic) CSAudioStream *audioStream; // @synthesize audioStream=_audioStream;
@property(nonatomic) unsigned long long streamClientType; // @synthesize streamClientType=_streamClientType;
@property(nonatomic) __weak CSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(nonatomic) __weak id <CSTriggerInfoProviding> triggerInfoProviding; // @synthesize triggerInfoProviding=_triggerInfoProviding;
@property(nonatomic, setter=setAudioStreamProvidingForProxy:) __weak id <CSAudioStreamProviding> audioStreamProviding; // @synthesize audioStreamProviding=_audioStreamProviding;
- (void)_setAllowMixableAudioWhileRecording:(_Bool)arg1;
- (void)_sendDelegateMessageToClient:(id)arg1;
- (void)audioStreamProvider:(id)arg1 didHardwareConfigurationChange:(long long)arg2;
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;
- (void)_handlePlaybackRouteMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleIsNarrowband:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordSettings:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordDeviceInfo:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordRouteMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleIsRecordingMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleVoiceTriggerInfoMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleStopAudioStreamMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleStartAudioStreamMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleAudioStreamPrepareMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleAudioStreamRequestMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleSetCurrentConextMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)handleXPCMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)CSXPCConnectionReceivedClientError:(id)arg1 clientError:(id)arg2 client:(id)arg3;
- (void)_sendReply:(id)arg1 client:(id)arg2 result:(_Bool)arg3 error:(id)arg4;
- (void)setInitialContext:(id)arg1;
- (id)initWithXPCConnection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

