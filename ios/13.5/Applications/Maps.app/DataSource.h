//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "DragAndDropMapItemObserver-Protocol.h"
#import "DragAndDropPreviewContentUpdateDelegate-Protocol.h"
#import "MKLocationManagerObserver-Protocol.h"

@class AutocompleteContext, DragAndDropMapItem, DragAndDropPreview, GEOLocation, ListInteractionSession, MKLocationManager, NSArray, NSDate, NSMutableDictionary, NSString, UITableView;
@protocol DataSourceDelegate, UIDragSession;

__attribute__((visibility("hidden")))
@interface DataSource : NSObject <MKLocationManagerObserver, DragAndDropMapItemObserver, DragAndDropPreviewContentUpdateDelegate>
{
    ListInteractionSession *_currentListInteractionSession;
    NSDate *_dateActive;
    NSMutableDictionary *_proactiveItemAddDates;
    DragAndDropMapItem *_dragItem;
    DragAndDropPreview *_previewView;
    id <UIDragSession> _currentDragSession;
    MKLocationManager *_locationManager;
    _Bool _eventProactiveSuggestionInteractionSent;
    _Bool _active;
    UITableView *_tableView;
    GEOLocation *_currentLocation;
    id <DataSourceDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(nonatomic) __weak id <DataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GEOLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)updateSavedLocation:(id)arg1;
- (void)preferredContentSizeChanged:(id)arg1;
- (id)visibleCells;
- (id)tableView:(id)arg1 dragPreviewParametersForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 itemsForBeginningDragSession:(id)arg2 atIndexPath:(id)arg3;
- (void)tableView:(id)arg1 dragSessionDidEnd:(id)arg2;
- (void)tableView:(id)arg1 dragSessionWillBegin:(id)arg2;
@property(readonly, nonatomic) int targetForDragAnalytics;
- (void)dragAndDropPreviewDidUpdate:(id)arg1;
- (void)dragAndDropItem:(id)arg1 didResolveMapItem:(id)arg2;
- (void)updatePreviewDrag;
@property(readonly, nonatomic) AutocompleteContext *analyticsContext;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)proactiveAnalyticElementsAtIndex:(int)arg1 action:(int)arg2 elementsBlock:(CDUnknownBlockType)arg3;
- (void)sendAnalyticsForDataAtIndexPath:(id)arg1 object:(id)arg2 childPlaceIndexPath:(id)arg3 childPlaceObject:(id)arg4 action:(int)arg5 eventValue:(id)arg6;
- (void)addEKAnalyticsForEntry:(id)arg1 tapped:(_Bool)arg2;
- (void)sendAnalyticsForDataAtIndexPath:(id)arg1 object:(id)arg2 action:(int)arg3 eventValue:(id)arg4;
- (void)sendAnalyticsForDataAtIndexPath:(id)arg1 object:(id)arg2 action:(int)arg3;
- (void)selectAtIndexPath:(id)arg1;
@property(readonly, nonatomic) int listInteractionSessionType;
- (id)objectAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSArray *objectsForAnalytics;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)sendCurrentListSession;
@property(readonly, nonatomic) NSString *searchTextForAnalyics;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
@property(readonly, nonatomic) double rowHeight;
- (id)initWithTableView:(id)arg1 updateLocation:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

