//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "BackgroundNavigationDelegate-Protocol.h"
#import "CNContactPickerDelegate-Protocol.h"
#import "CarDisplayDelegate-Protocol.h"
#import "MNNavigationServiceObserver-Protocol.h"
#import "PrintControllerDelegate-Protocol.h"
#import "RAPSubmitterDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UIApplicationDelegatePrivate-Protocol.h"
#import "UNUserNotificationCenterDelegate-Protocol.h"

@class AppCoordinator, ApplicationSessionController, BKSProcessAssertion, CarDisplayController, DataActivationPopupAssertion, EntryPointsCoordinator, FavoritesSpotlightIndexingClient, ForegroundOnlyDataActivationPopupAssertion, IOSChromeViewController, IdleTimerController, MKPlaceholderGridCache, MSPCloudSynchronizer, MapsDistanceUnitUpdater, NSArray, NSString, NavigationIdleTimerProvider, NavigationThermalWarningController, POISearchManager, PlatformController, PrintController, RAPAddAPlaceNavigationController, RAPAddAPlaceReportComposer, RAPPlacecardEntryComposer, RAPReportComposerViewController, RAPSubmitter, SBSLockScreenContentAssertion, SBSStatusBarStyleOverridesAssertion, SiriNavStatusUpdater, TransitWidgetAlertManager, UIWindow;

__attribute__((visibility("hidden")))
@interface MapsAppDelegate : UIResponder <RAPSubmitterDelegate, CNContactPickerDelegate, CarDisplayDelegate, UNUserNotificationCenterDelegate, UIApplicationDelegate, UIApplicationDelegatePrivate, BackgroundNavigationDelegate, PrintControllerDelegate, MNNavigationServiceObserver>
{
    int _navNotifyToken;
    _Bool _hasNavNotifyToken;
    _Bool _isNavigating;
    _Bool _isTrackingLocation;
    _Bool _isShowingTour;
    _Bool _carNavigationWasVisible;
    DataActivationPopupAssertion *_navigatorDataActivationPopupAssertion;
    ForegroundOnlyDataActivationPopupAssertion *_foregroundDataActivationPopupAssertion;
    POISearchManager *_poiSearchManager;
    FavoritesSpotlightIndexingClient *_favoritesSpotlightIndexingClient;
    MSPCloudSynchronizer *_cloudSynchronizer;
    CarDisplayController *_carDisplayController;
    MKPlaceholderGridCache *_placeholderGridCache;
    TransitWidgetAlertManager *_transitWidgetAlertManager;
    NavigationIdleTimerProvider *_navigationIdleTimerProvider;
    NavigationThermalWarningController *_thermalWarningController;
    _Bool _wantsFirstUndimAlert;
    _Bool _hasCompletedFirstUndimAlert;
    SBSStatusBarStyleOverridesAssertion *_doubleHeightStatusBarAssertion;
    SBSLockScreenContentAssertion *_secureAppAssertion;
    RAPReportComposerViewController *_reportComposer;
    RAPAddAPlaceReportComposer *_addAPlaceReportComposer;
    RAPSubmitter *_submitter;
    unsigned long long _reportAProblemSubmitterAssertion;
    _Bool _backgroundTaskExpired;
    RAPAddAPlaceNavigationController *_addAPlaceNavigationController;
    RAPPlacecardEntryComposer *_placecardReportComposer;
    _Bool _mapsIsNavigatingTurnByTurn;
    _Bool _coreRoutineEnabled;
    PrintController *_printController;
    BKSProcessAssertion *_priorityAssertion;
    SiriNavStatusUpdater *_siriNavStatusUpdater;
    MapsDistanceUnitUpdater *_distanceUnitUpdater;
    IdleTimerController *_idleTimerController;
    ApplicationSessionController *_appSessionController;
}

- (void).cxx_destruct;
@property(retain, nonatomic) ApplicationSessionController *appSessionController; // @synthesize appSessionController=_appSessionController;
@property(retain, nonatomic) IdleTimerController *idleTimerController; // @synthesize idleTimerController=_idleTimerController;
@property(retain, nonatomic) MapsDistanceUnitUpdater *distanceUnitUpdater; // @synthesize distanceUnitUpdater=_distanceUnitUpdater;
@property(retain, nonatomic) SiriNavStatusUpdater *siriNavStatusUpdater; // @synthesize siriNavStatusUpdater=_siriNavStatusUpdater;
@property(retain, nonatomic) BKSProcessAssertion *priorityAssertion; // @synthesize priorityAssertion=_priorityAssertion;
@property(readonly, nonatomic) MSPCloudSynchronizer *cloudSynchronizer; // @synthesize cloudSynchronizer=_cloudSynchronizer;
@property(readonly, nonatomic) FavoritesSpotlightIndexingClient *favoritesSpotlightIndexingClient; // @synthesize favoritesSpotlightIndexingClient=_favoritesSpotlightIndexingClient;
@property(readonly, nonatomic, getter=isCoreRoutineEnabled) _Bool coreRoutineEnabled; // @synthesize coreRoutineEnabled=_coreRoutineEnabled;
@property(readonly, nonatomic) PrintController *printController; // @synthesize printController=_printController;
@property(nonatomic) _Bool mapsIsNavigatingTurnByTurn; // @synthesize mapsIsNavigatingTurnByTurn=_mapsIsNavigatingTurnByTurn;
- (id)testCoordinator;
- (id)mainVKMapView;
- (id)mapsSceneDelegateForTesting;
- (id)visibleMapViewFromCarPlay;
- (id)visibleMapViewFromChrome;
@property(readonly, nonatomic) NSArray *allVisibleMapViewsButNotCarPlay;
@property(readonly, nonatomic) NSArray *allVisibleMapViews;
- (void)_installMenuItems;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2;
- (void)contactPicker:(id)arg1 didSelectContact:(id)arg2;
- (void)showPeoplePickerControllerFromController:(id)arg1;
- (void)showFromController:(id)arg1 alertForHomeAddress:(_Bool)arg2;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)printControllerDidPresentPrinterOptions:(id)arg1;
- (struct CGRect)popoverPresentationRectForPrintController:(id)arg1;
- (void)printSearchResultFromSession:(id)arg1;
- (void)printRoute:(id)arg1;
- (void)_initializePrintingController;
- (void)endBackgroundNavigation;
- (void)updateWithGuidance:(id)arg1;
- (void)startPreparedBackgroundNavigationWithMessage:(id)arg1;
- (void)prepareBackgroundNavigationWithMessage:(id)arg1;
- (void)navigationService:(id)arg1 didFailWithError:(id)arg2;
- (void)navigationServiceWillResumeFromPause:(id)arg1;
- (void)navigationServiceWillPause:(id)arg1;
- (void)navigationService:(id)arg1 didEnableGuidancePrompts:(_Bool)arg2;
- (void)navigationServiceDidArrive:(id)arg1;
- (void)navigationService:(id)arg1 didChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)navigationService:(id)arg1 willChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)endTurnByTurn:(id)arg1;
- (void)startTurnByTurn:(id)arg1;
@property(readonly, nonatomic) _Bool canPlayTrace;
- (void)_releaseSecureAppAssertion;
- (void)_acquireSecureAppAssertion;
- (void)_updateSecureAppAssertion;
- (void)acquireSecureAppAssertionIfNeeded;
- (void)_updateNavigationIdleTimerConfiguration;
- (void)updateNavigationIdleTimerConfiguration;
- (void)setMapsIsShowingTour:(_Bool)arg1;
- (void)setTrackingMode:(long long)arg1 monitorBatteryState:(_Bool)arg2;
- (void)_clearDoubleHeightStatusBar;
- (void)_acquireDoubleHeightStatusBarAssertionIfNeeded;
- (void)_unsuppressNetworkFlagsIfNecessary;
- (void)_unsuppressNetworkFlags;
- (void)_suppressNetworkFlags;
- (void)carDisplayControllerDidInvalidateNavigationVisibility:(id)arg1;
- (void)prepareForCarPlayLaunch;
- (void)_userDefaultsDidChange:(id)arg1;
- (void)_registerDefaults;
- (_Bool)applicationCanPromptToCalibrateHeading:(id)arg1;
- (void)applicationDidRemoveDeactivationReason:(id)arg1;
- (void)applicationWillAddDeactivationReason:(id)arg1;
- (void)_maps_applicationDidEnterBackground:(id)arg1;
- (void)_maps_applicationWillEnterForeground:(id)arg1;
- (void)_maps_applicationWillResignActive:(id)arg1;
- (void)_maps_applicationDidBecomeActive:(id)arg1;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (id)application:(id)arg1 configurationForConnectingSceneSession:(id)arg2 options:(id)arg3;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
- (void)_performPostExtendedLaunchInitialization;
- (void)receivedFullyDrawnNotification;
- (void)sendDidEnterBackgroundNotification;
@property(readonly, nonatomic) double timeIntervalSinceLastBackgrounded;
- (void)checkCoreRoutineEnabledState;
- (void)_setupSharedLocationManager;
- (void)_startSyncIfNeededAllowingHistorySyncStartDuringTesting:(_Bool)arg1;
@property(readonly, nonatomic) POISearchManager *poiSearchManager;
@property(readonly, nonatomic) EntryPointsCoordinator *entryPointsCoordinator;
@property(readonly, nonatomic) IOSChromeViewController *chromeViewController;
@property(readonly, nonatomic) AppCoordinator *appCoordinator;
@property(readonly, nonatomic) PlatformController *platformController;
- (void)dealloc;
- (void)_sendAddAPlaceWithReport:(id)arg1 composer:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_didCancelAddAPlace:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentAddAPlaceViewControllerWithAppState:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentAutocompleteSearchRAPWithSearchManager:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentMuninRAPWithEditingContext:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentReportAProblemForRoute;
- (void)presentAddAPlaceWithCompletion:(CDUnknownBlockType)arg1;
- (void)_presentAddAPlaceWithEditingBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_beginReschedulingSendingReportAProblemReportsIfNeeded;
- (void)_beginSendingReportAProblemReportsIfNeeded;
- (void)_updateReportAProblemSubmitterCanSendReallowingBackgroundAssertions:(_Bool)arg1;
- (void)_saveDirectionRecordingsIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)dismissReportAProblemAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)presentReportAProblemWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentReportAProblemFromSettingsWithCompletion:(CDUnknownBlockType)arg1;
- (id)createReportAProblemAppState;
- (void)createReportAProblemAppStateAndPrefetchShortcutsWithCompletion:(CDUnknownBlockType)arg1;
- (void)createReportAProblemAppStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)representReportAProblemIfCurrentlyOngoingAnimated:(_Bool)arg1;
- (void)_presentReportComposerWithAppState:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentReportAProblemAndPrefetchShortcutsWithEditingContext:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentReportAProblemByEditingContext:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)_shouldDisplayPoiActionSheet:(id)arg1;
- (void)_presentLightweightFeedbackAcknowledgmentScreen;
- (void)_presentReportComposerWithCompletion:(CDUnknownBlockType)arg1;
- (void)_dismissReportComposerWithSender:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentReportAProblemFromPlacecardWithEditingContext:(CDUnknownBlockType)arg1 overriddenUserInterfaceStyle:(long long)arg2 sourceView:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_presentDetailedPlacecardEditorWithReport:(id)arg1 overriddenUserInterfaceStyle:(long long)arg2 submissionHandler:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)presentAddAPlaceFromPlacecardWithEditingContext:(CDUnknownBlockType)arg1 overriddenUserInterfaceStyle:(long long)arg2 shouldShowDetailedFlow:(_Bool)arg3 sourceView:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) _Bool reportAProblemPresentationWillCoverEntireScreen;
- (void)submitterDidStopRequiringActivityAssertion:(id)arg1;
- (void)submitterWillStartRequiringActivityAssertion:(id)arg1;
- (id)addAPlaceNavigationController;
@property(readonly, nonatomic) RAPSubmitter *reportAProblemSubmitter;
- (void)showNavigationAdvisoryIfNeeded;
- (void)promptLocationServicesAuthorizationWithHandler:(CDUnknownBlockType)arg1;
- (void)showLocationServicesAlertWithError:(id)arg1;
- (void)interruptApplicationWithKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;
- (void)dismissCurrentInterruption;
@property(readonly, nonatomic) long long currentInterruptionKind;
- (void)_setCurrentInterruptionHandle:(id)arg1;
- (id)_currentInterruptionHandle;
- (void)_markMyLocation;
- (void)addAttachmentsPathToComposer:(id)arg1;
- (void)copyCachesToPath:(id)arg1;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 showingTracePicker:(_Bool)arg2 traceFilePath:(id)arg3 radarTitle:(id)arg4 radarDescription:(id)arg5 isCrash:(_Bool)arg6 component:(unsigned long long)arg7;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 showingTracePicker:(_Bool)arg2 traceFilePath:(id)arg3;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 reason:(id)arg2 radarTitle:(id)arg3 radarDescription:(id)arg4 shouldPrompt:(_Bool)arg5 isCrash:(_Bool)arg6 component:(unsigned long long)arg7;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1 reason:(id)arg2 radarTitle:(id)arg3 isCrash:(_Bool)arg4 component:(unsigned long long)arg5;
- (void)presentRadarComposerIfPossibleInViewController:(id)arg1;
- (_Bool)createCurrentStateSnapshotAndReturnSnapshotDirectoryURL:(out id *)arg1 tileStateReportURLs:(out id *)arg2 screenshotImageURLs:(out id *)arg3 debugTreeURLs:(out id *)arg4 mapsActivityDataPath:(out id *)arg5 error:(out id *)arg6;
- (_Bool)_isMainScreenMapView:(id)arg1;
- (_Bool)_isCarPlayMapView:(id)arg1;
- (_Bool)application:(id)arg1 runTest:(id)arg2 options:(id)arg3;
- (id)currentTest;
- (void)setCurrentTest:(id)arg1;
- (void)doPostLaunchTestSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

