//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "OverlayContainerViewController.h"

#import "GEOLogContextDelegate-Protocol.h"
#import "LockScreenProtocol-Protocol.h"
#import "MapViewResponderHandling-Protocol.h"
#import "MapViewZoomControllerDelegate-Protocol.h"
#import "NavContainerLayoutDelegate-Protocol.h"
#import "NavHeadingViewControllerDelegate-Protocol.h"
#import "NavIdleTimerDelegate-Protocol.h"
#import "NavSpeedLimitViewControllerDelegate-Protocol.h"
#import "NavigationDisplayCameraDelegate-Protocol.h"
#import "NavigationDisplayMapViewCompassDelegate-Protocol.h"
#import "PassThroughViewControllerDelegate-Protocol.h"
#import "StatusIndicatorDelegate-Protocol.h"

@class GuidanceObserver, LowGuidanceSignsViewController, NSCache, NSLayoutConstraint, NSString, NSTimer, NavActionCoordinator, NavCompassViewController, NavContainerBannerAction, NavContainerResumeRouteControl, NavDrivingIndicatorsViewController, NavIdleTimeoutTimer, NavRecenterButtonView, NavSignViewController, NavigationDebugViewsController, PedestrianNavSignViewController, PlatformController, Route, StatusIndicatorManager, StatusIndicatorView, UIView, UIViewController;
@protocol GuidanceDisplay, NavTrafficIncidentAlertCoordination, SignHintDisplay;

__attribute__((visibility("hidden")))
@interface NavContainerViewController : OverlayContainerViewController <GEOLogContextDelegate, NavSpeedLimitViewControllerDelegate, NavHeadingViewControllerDelegate, PassThroughViewControllerDelegate, StatusIndicatorDelegate, MapViewResponderHandling, NavContainerLayoutDelegate, NavIdleTimerDelegate, NavigationDisplayCameraDelegate, NavigationDisplayMapViewCompassDelegate, MapViewZoomControllerDelegate, LockScreenProtocol>
{
    _Bool _visible;
    NSLayoutConstraint *_signTopToContentViewTopConstraint;
    NSCache *_stringsCache;
    NavRecenterButtonView *_navRecenterButtonView;
    NSTimer *_temporaryStatusBarHidingTimer;
    _Bool _junctionViewActive;
    NSLayoutConstraint *_recenterButtonLeadingConstraint;
    NSLayoutConstraint *_recenterButtonTrailingConstraint;
    NSLayoutConstraint *_recenterButtonBottomToInnerLayoutGuideConstraint;
    _Bool _showingTemporaryStatusBar;
    _Bool _debugViewControllerEnabled;
    NavContainerBannerAction *_bannerAction;
    NavActionCoordinator *_coordinator;
    Route *_route;
    GuidanceObserver *_guidanceObserver;
    double _availableHeightForJunctionView;
    unsigned long long _signStyle;
    PlatformController *_platformController;
    NavigationDebugViewsController *_debugViewsController;
    NavContainerResumeRouteControl *_bannerButton;
    NavIdleTimeoutTimer *_idleTimer;
    UIViewController<GuidanceDisplay> *_presentedSignViewController;
    LowGuidanceSignsViewController *_lowGuidanceSignsViewController;
    NavSignViewController *_drivingNavSignsViewController;
    PedestrianNavSignViewController *_pedestrianNavSignsViewController;
    NavDrivingIndicatorsViewController *_drivingIndicatorsViewController;
    NavCompassViewController *_compassViewController;
    StatusIndicatorManager *_statusIndicatorManager;
    StatusIndicatorView *_statusIndicatorView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) StatusIndicatorView *statusIndicatorView; // @synthesize statusIndicatorView=_statusIndicatorView;
@property(retain, nonatomic) StatusIndicatorManager *statusIndicatorManager; // @synthesize statusIndicatorManager=_statusIndicatorManager;
@property(retain, nonatomic) NavCompassViewController *compassViewController; // @synthesize compassViewController=_compassViewController;
@property(retain, nonatomic) NavDrivingIndicatorsViewController *drivingIndicatorsViewController; // @synthesize drivingIndicatorsViewController=_drivingIndicatorsViewController;
@property(retain, nonatomic) PedestrianNavSignViewController *pedestrianNavSignsViewController; // @synthesize pedestrianNavSignsViewController=_pedestrianNavSignsViewController;
@property(retain, nonatomic) NavSignViewController *drivingNavSignsViewController; // @synthesize drivingNavSignsViewController=_drivingNavSignsViewController;
@property(retain, nonatomic) LowGuidanceSignsViewController *lowGuidanceSignsViewController; // @synthesize lowGuidanceSignsViewController=_lowGuidanceSignsViewController;
@property(retain, nonatomic) UIViewController<GuidanceDisplay> *presentedSignViewController; // @synthesize presentedSignViewController=_presentedSignViewController;
@property(retain, nonatomic) NavIdleTimeoutTimer *idleTimer; // @synthesize idleTimer=_idleTimer;
@property(readonly, nonatomic) NavContainerResumeRouteControl *bannerButton; // @synthesize bannerButton=_bannerButton;
@property(nonatomic) _Bool debugViewControllerEnabled; // @synthesize debugViewControllerEnabled=_debugViewControllerEnabled;
@property(retain, nonatomic) NavigationDebugViewsController *debugViewsController; // @synthesize debugViewsController=_debugViewsController;
@property(retain, nonatomic) PlatformController *platformController; // @synthesize platformController=_platformController;
@property(nonatomic) unsigned long long signStyle; // @synthesize signStyle=_signStyle;
@property(readonly, nonatomic) double availableHeightForJunctionView; // @synthesize availableHeightForJunctionView=_availableHeightForJunctionView;
@property(readonly, nonatomic) GuidanceObserver *guidanceObserver; // @synthesize guidanceObserver=_guidanceObserver;
@property(nonatomic) _Bool showingTemporaryStatusBar; // @synthesize showingTemporaryStatusBar=_showingTemporaryStatusBar;
@property(retain, nonatomic) Route *route; // @synthesize route=_route;
@property(retain, nonatomic) NavActionCoordinator *coordinator; // @synthesize coordinator=_coordinator;
@property(copy, nonatomic) NavContainerBannerAction *bannerAction; // @synthesize bannerAction=_bannerAction;
- (void)didEndDisplayingInLockScreen;
- (void)willBeginDisplayingInSecureLockScreen;
- (int)currentMapViewTargetForAnalytics;
- (int)currentUITargetForAnalytics;
- (void)idleTimerDidTimeout:(id)arg1;
- (void)_updateIdleTimer;
- (void)statusIndicatorTypeChanged:(unsigned long long)arg1;
- (_Bool)_bannerActionShouldDisplay;
- (void)_closeBannerAction;
- (void)_performBannerAction;
- (void)_updateNavSignOffsetFromStatusBarBottom;
- (void)setBannerAction:(id)arg1 animated:(_Bool)arg2;
- (id)headerContentView;
- (double)bottomEdgeInset;
- (double)topEdgeInset;
@property(readonly, nonatomic) _Bool shouldShowNavIndicators;
- (_Bool)navSpeedLimitViewControllerShouldBecomeVisible:(id)arg1;
- (_Bool)navHeadingViewControllerShouldBecomeVisible:(id)arg1;
- (unsigned long long)_signLayoutTypeForTraits:(id)arg1;
- (struct UIEdgeInsets)_lowGuidanceSignViewEdgeInsets;
- (void)_detachCommuteAndCompassViewControllers;
- (void)_detachDrivingIndicatorsViewController;
- (void)_detachDrivingNavSignViewController;
- (void)_detachPedestrianNavSignViewController;
- (void)_detachSignsViewController:(id)arg1;
- (void)_attachCommuteSignsAndCompassViewControllers;
- (void)_attachDrivingNavSignViewController;
- (void)_attachPedestrianNavSignViewController;
- (void)_attachSignsViewController:(id)arg1 topContentSizeStyle:(unsigned long long)arg2;
- (void)_updateDisplayedSignViewController;
- (void)_attachDrivingIndicatorsViewController;
- (void)_navigationChromeVisibilityChanged;
@property(readonly, nonatomic) _Bool shouldShowSearchAlongTheRoute;
@property(readonly, nonatomic, getter=isForWalkingNav) _Bool forWalkingNav;
- (void)updateNavRecenterButtonVisibility;
- (void)setNavIndicatorsHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)didReceiveNewLocation:(id)arg1;
- (void)updateWithDisplayedSignStep:(id)arg1;
- (void)showSignForStep:(id)arg1;
- (void)setSignStyle:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)mapView:(id)arg1 didUpdateYaw:(double)arg2;
- (void)mapViewZoomController:(id)arg1 didChangeMapViewZoom:(unsigned long long)arg2;
- (void)mapViewNavigationCameraDidReturnToDefaultZoom:(id)arg1;
- (void)mapViewNavigationCameraDidLeaveDefaultZoom:(id)arg1;
- (void)mapViewNavigationCameraHasStoppedPanning:(id)arg1;
- (void)mapViewNavigationCameraHasStartedPanning:(id)arg1;
- (unsigned long long)maxLayoutForEdgeInsetsUpdate;
- (double)availableHeight;
@property(readonly, nonatomic) double availableHeightOnScreen;
- (void)containerStyleManagerDidChangeStyle:(unsigned long long)arg1;
- (unsigned long long)originalLayoutForViewController:(id)arg1;
- (void)updateLayoutAnimated:(_Bool)arg1;
- (void)updateCurrentViewControllerToBeVisible:(_Bool)arg1;
- (_Bool)shouldHideJunctionView;
- (id)maneuverAttributedStringCache;
- (double)maxAvailableHeightForJunctionView;
- (void)willHideJunctionView;
- (void)hideJunctionViewIfNeeded;
- (void)showJunctionViewIfNeeded;
- (void)willDisplayJunctionViewInfo:(id)arg1;
- (_Bool)canDisplayJunctionViewInfo;
- (void)layoutNavContainer;
@property(readonly, nonatomic) UIView *passThroughView;
- (void)_updateNavRecenterButtonConstraintsForContainerStyle:(unsigned long long)arg1;
- (void)navRecenterButtonClicked:(id)arg1;
- (_Bool)_shouldShowNavRecenterButton;
- (void)_toggleTraceControls;
- (void)didTapMapView:(id)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewSafeAreaInsetsDidChange;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (_Bool)prefersStatusBarHidden;
- (_Bool)showStatusBarBackgroundViewWhenResigning;
- (id)statusBarBackgroundViewStyle;
- (long long)preferredStatusBarStyle;
- (void)hideStatusBarIfNeeded;
- (void)toggleTemporaryStatusBar;
- (void)_hideTemporaryStatusBar;
- (void)_showTemporaryStatusBar;
@property(readonly, nonatomic) _Bool hasBigStatusBar;
@property(readonly, nonatomic) id <NavTrafficIncidentAlertCoordination> trafficIncidentAlertCoordinator;
@property(readonly, nonatomic) UIViewController<SignHintDisplay> *signHintDisplayViewController;
- (void)dealloc;
- (id)initWithCoordinator:(id)arg1 guidanceObserver:(id)arg2 platformController:(id)arg3;
- (_Bool)_canShowWhileLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

