//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <MTLCapture/CaptureMTLObject-Protocol.h>
#import <MTLCapture/MTLFunctionSPI-Protocol.h>

@class CaptureMTLDevice, CaptureMTLLibrary, MTLType, NSArray, NSDictionary, NSString;
@protocol MTLDevice, MTLFunction, MTLFunctionSPI;

@interface CaptureMTLFunction : NSObject <MTLFunctionSPI, CaptureMTLObject>
{
    id <MTLFunctionSPI> _baseObject;
    CaptureMTLDevice *_captureDevice;
    CaptureMTLLibrary *_captureLibrary;
    // Error parsing type: ^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai^{GTTraceStream}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}}, name: _traceContext
    // Error parsing type: ^{GTTraceStream=QQQ^{GTTraceMemPool}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}AQ}, name: _traceStream
}

+ (_Bool)newCaptureFunction:(out id *)arg1 associatedWithBaseFunction:(id)arg2 captureLibrary:(id)arg3;
- (void).cxx_destruct;
- (id)reflectionWithOptions:(unsigned long long)arg1;
- (id)newFunctionWithPluginData:(id)arg1 bitcodeType:(unsigned char)arg2;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1;
- (id)bitcodeData;
- (const CDStruct_5af0f983 *)bitCodeHash;
@property(readonly) NSArray *vertexAttributes;
@property(readonly, copy) NSString *unpackedFilePath;
@property(readonly) NSArray *stageInputAttributes;
@property(readonly) MTLType *returnType;
@property(readonly) unsigned long long renderTargetArrayIndexType;
@property(readonly) unsigned long long patchType;
@property(readonly) long long patchControlPointCount;
@property(readonly) NSString *name;
@property(readonly) long long lineNumber;
@property(copy) NSString *label;
@property(readonly) unsigned long long functionType;
@property(readonly) NSDictionary *functionConstantsDictionary;
@property(readonly, copy) NSString *filePath;
@property(readonly) id <MTLDevice> device;
@property(readonly) NSArray *arguments;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (id)forwardingTargetForSelector:(SEL)arg1;
@property(readonly) unsigned long long streamReference;
// Error parsing type for property traceStream:
// Property attributes: T^{GTTraceStream=QQQ^{GTTraceMemPool}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}AQ},R

// Error parsing type for property traceContext:
// Property attributes: T^{GTTraceContext={_opaque_pthread_mutex_t=q[56c]}^{GTTraceStore}AQAQ^{apr_hash_t}^(FreeNode)Ai^{GTTraceStream}{GTTraceStoreList=^(GTTraceStoreNode)^(GTTraceStoreNode)AiAi}},R

- (void)touch;
- (id)newArgumentEncoderWithBufferIndex:(unsigned long long)arg1 reflection:(id *)arg2;
@property(readonly) id <MTLFunction> baseObject;
- (void)dealloc;
- (void)swapObject:(id)arg1;
- (id)initWithBaseObject:(id)arg1 captureDevice:(id)arg2;
- (id)initWithBaseObject:(id)arg1 captureLibrary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

