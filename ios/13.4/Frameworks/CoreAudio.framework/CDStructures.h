//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioObjectPropertyAddress {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct HAL_Server_Lifetime_Events;

struct Listener_List {
    struct unique_ptr<HAL::Client::Listener_List::Listener_List_Impl, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> _field1;
};

struct Listener_List_Impl;

struct ObjectIDMap;

struct PropertyAddress {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Property_Identity {
    unsigned int _field1;
    struct PropertyAddress _field2;
    unsigned int _field3;
    int _field4;
};

struct __shared_weak_count;

struct shared_ptr<HAL::Client::ObjectIDMap> {
    struct ObjectIDMap *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<HAL::Client::Listener_List::Listener_List_Impl, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> {
    struct __compressed_pair<HAL::Client::Listener_List::Listener_List_Impl *, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> {
        struct Listener_List_Impl *_field1;
    } _field1;
};

struct vector<AudioObjectPropertyAddress, std::__1::allocator<AudioObjectPropertyAddress>> {
    struct AudioObjectPropertyAddress *_field1;
    struct AudioObjectPropertyAddress *_field2;
    struct __compressed_pair<AudioObjectPropertyAddress *, std::__1::allocator<AudioObjectPropertyAddress>> {
        struct AudioObjectPropertyAddress *_field1;
    } _field3;
};

struct weak_ptr<HAL_Server_Lifetime_Events> {
    struct HAL_Server_Lifetime_Events *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<HAL::Client::ObjectIDMap> {
    struct ObjectIDMap *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3c219583;

typedef struct vector<AudioObjectPropertyAddress, std::__1::allocator<AudioObjectPropertyAddress>> {
    struct AudioObjectPropertyAddress *_field1;
    struct AudioObjectPropertyAddress *_field2;
    struct __compressed_pair<AudioObjectPropertyAddress *, std::__1::allocator<AudioObjectPropertyAddress>> {
        struct AudioObjectPropertyAddress *_field1;
    } _field3;
} vector_9f82871d;

typedef struct weak_ptr<HAL_Server_Lifetime_Events> {
    struct HAL_Server_Lifetime_Events *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_7745b585;

