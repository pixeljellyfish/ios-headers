//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSString, SDDirtyIdleTimer, TermIndex;

@interface SIIndexer : NSObject
{
    _Bool _isOpen;
    _Bool _readOnly;
    _Bool _persistentFileIDs;
    _Bool _permissions;
    _Bool _isHFS;
    _Bool _isAPFS;
    _Bool _inBatch;
    int _device;
    // Error parsing type: AI, name: _addDocumentCount
    // Error parsing type: AI, name: _addDocumentForSplitCount
    unsigned int _completedDocumentCount;
    unsigned int _completedBatchCount;
    int _indexType;
    int _cancel;
    NSString *_path;
    NSString *_bundleID;
    NSString *_domain;
    SDDirtyIdleTimer *_dirtyIdleTimer;
    NSObject *_volumeObject;
    TermIndex *_termIndex;
    NSDictionary *_propertyMap;
    NSDictionary *_propertyNumMap;
    // Error parsing type: ^{_SI_PersistentIDStore={__CFRuntimeBase=QAQ}^v^{MDCredential}{_SI_PersistentIDStoreVtable=^?^?^?^?^?^?^?^?^?^?^?B^?^?^?^?B^?^?^?^?^?}C}, name: _psid
    NSMutableDictionary *_queryTasks;
    NSString *_rootPath;
    struct __SI *_index;
    struct _SIIndexCallbacks *_indexCallbacks;
    struct _opaque_pthread_rwlock_t _queryTasksRdWrLock;
}

+ (id)indexerWithPath:(id)arg1 options:(unsigned long long)arg2;
+ (id)indexerWithPath:(id)arg1 rootPath:(id)arg2 options:(unsigned long long)arg3;
+ (id)indexerWithPath:(id)arg1 rootPath:(id)arg2;
+ (struct __SIUserCtx *)createUserContext:(id)arg1;
+ (void)initialize;
+ (void)setLogLevel:(int)arg1 forCategory:(char *)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct _SIIndexCallbacks *indexCallbacks; // @synthesize indexCallbacks=_indexCallbacks;
@property(readonly, nonatomic) struct __SI *index; // @synthesize index=_index;
@property(retain, nonatomic) NSString *rootPath; // @synthesize rootPath=_rootPath;
@property(nonatomic) int cancel; // @synthesize cancel=_cancel;
@property(nonatomic) _Bool inBatch; // @synthesize inBatch=_inBatch;
@property(nonatomic) _Bool isAPFS; // @synthesize isAPFS=_isAPFS;
@property(nonatomic) _Bool isHFS; // @synthesize isHFS=_isHFS;
@property(nonatomic) _Bool permissions; // @synthesize permissions=_permissions;
@property(nonatomic) struct _opaque_pthread_rwlock_t queryTasksRdWrLock; // @synthesize queryTasksRdWrLock=_queryTasksRdWrLock;
@property(retain, nonatomic) NSMutableDictionary *queryTasks; // @synthesize queryTasks=_queryTasks;
// Error parsing type for property psid:
// Property attributes: T^{_SI_PersistentIDStore={__CFRuntimeBase=QAQ}^v^{MDCredential}{_SI_PersistentIDStoreVtable=^?^?^?^?^?^?^?^?^?^?^?B^?^?^?^?B^?^?^?^?^?}C},N,V_psid

@property(nonatomic) int indexType; // @synthesize indexType=_indexType;
@property(retain, nonatomic) NSDictionary *propertyNumMap; // @synthesize propertyNumMap=_propertyNumMap;
@property(retain, nonatomic) NSDictionary *propertyMap; // @synthesize propertyMap=_propertyMap;
@property(retain, nonatomic) TermIndex *termIndex; // @synthesize termIndex=_termIndex;
@property(retain, nonatomic) NSObject *volumeObject; // @synthesize volumeObject=_volumeObject;
@property(nonatomic) unsigned int completedBatchCount; // @synthesize completedBatchCount=_completedBatchCount;
@property(nonatomic) unsigned int completedDocumentCount; // @synthesize completedDocumentCount=_completedDocumentCount;
// Error parsing type for property addDocumentForSplitCount:
// Property attributes: TAI,N,V_addDocumentForSplitCount

// Error parsing type for property addDocumentCount:
// Property attributes: TAI,N,V_addDocumentCount

@property(retain, nonatomic) SDDirtyIdleTimer *dirtyIdleTimer; // @synthesize dirtyIdleTimer=_dirtyIdleTimer;
@property(retain, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(readonly, nonatomic) int device; // @synthesize device=_device;
@property(nonatomic) _Bool persistentFileIDs; // @synthesize persistentFileIDs=_persistentFileIDs;
@property(nonatomic) _Bool readOnly; // @synthesize readOnly=_readOnly;
@property(nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
- (id)allQueryTasks;
- (id)getQueryTaskForID:(id)arg1;
- (void)setQueryTask:(id)arg1 forID:(id)arg2;
- (void)_budget:(id)arg1 cost:(long long)arg2 work:(CDUnknownBlockType)arg3;
- (void)_delete:(unsigned int)arg1 bundleId:(id)arg2 uniqueId:(id)arg3 utiType:(id)arg4;
- (void)_accountingEnd:(void *)arg1 result:(_Bool)arg2;
- (void *)_accountingStart:(const char *)arg1;
- (void)_messageTrace:(const char *)arg1 signature:(const char *)arg2 result:(int)arg3 operation:(const char *)arg4 message:(const char *)arg5 value:(long long)arg6;
- (void)_scheduleWake:(_Bool)arg1 description:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)_releasePower:(int)arg1 file:(const char *)arg2 line:(int)arg3 function:(const char *)arg4;
- (int)_assertPower:(const char *)arg1 line:(int)arg2 function:(const char *)arg3;
- (void)_resumeImports;
- (void)_holdImports;
- (_Bool)_repairOid:(long long)arg1 type:(int)arg2 flags:(int)arg3;
- (void)_reopen:(const char *)arg1;
- (void)_indexFinalize;
- (void)_reimport:(long long)arg1 flags:(int)arg2 userCtx:(struct __SIUserCtx *)arg3;
- (int)_preSync:(CDStruct_56753cf9)arg1;
- (int)_syncFinished:(_Bool)arg1 docCounts:(CDStruct_56753cf9)arg2;
- (id)getAttributes:(id)arg1 forOid:(long long)arg2;
- (void)deleteOID:(long long)arg1;
- (void)rename:(const char *)arg1 toPath:(const char *)arg2;
- (long long)oidForPath:(const char *)arg1 allowCreate:(_Bool)arg2;
- (unsigned char)groupForDocID:(unsigned long long)arg1;
- (unsigned long long)oidForDocID:(unsigned long long)arg1;
- (unsigned int)relativeDocID:(unsigned long long)arg1;
- (void)oidParents:(CDUnknownBlockType)arg1;
- (void)fullMerge;
- (void)merge;
- (void)split;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
- (void)issueCommit;
- (void)removeRecordsForIDs:(unsigned long long *)arg1 count:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateRecords:(id)arg1 forIDs:(unsigned long long *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addRecords:(id)arg1 forIDs:(unsigned long long *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)verify;
- (id)propertyName:(unsigned long long)arg1;
@property(readonly, nonatomic) NSDictionary *indexProperties;
- (void)iterateTermIndexes:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)iterateTermIndexes:(CDUnknownBlockType)arg1;
- (id)termIndex:(unsigned long long)arg1;
- (id)oidPath:(long long)arg1;
- (id)path:(long long)arg1;
@property(readonly, nonatomic) unsigned long long termIndexCount;
@property(readonly, nonatomic) _Bool isXcodeIndex;
@property(readonly, nonatomic) _Bool isSpotlightIndex;
@property(readonly, nonatomic) _Bool isCoreSpotlight;
@property(readonly, nonatomic) _Bool isFSOnly;
- (void)close;
- (_Bool)openWithOptions:(unsigned long long)arg1;
- (void)deleteFilesInDirectory:(int)arg1;
- (void)dealloc;
- (id)init;

@end

