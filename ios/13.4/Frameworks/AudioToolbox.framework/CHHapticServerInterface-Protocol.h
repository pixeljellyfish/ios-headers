//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class AVAudioFormat, NSArray, NSData, NSDictionary;

@protocol CHHapticServerInterface
- (void)debugExpectNotifyOnFinishAfter:(double)arg1 reply:(void (^)(void))arg2;
- (void)stopRunning:(void (^)(NSError *))arg1;
- (void)stopRunning;
- (void)startRunning:(void (^)(NSError *))arg1;
- (void)stopPrewarm;
- (void)prewarm:(void (^)(NSError *))arg1;
- (void)detachSequence:(unsigned long long)arg1;
- (void)prepareHapticSequence:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)removeCustomAudioEvent:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)copyCustomAudioEvent:(unsigned long long)arg1 options:(NSDictionary *)arg2 reply:(void (^)(unsigned long long, NSError *))arg3;
- (void)createCustomAudioEvent:(NSData *)arg1 format:(AVAudioFormat *)arg2 frames:(unsigned long long)arg3 options:(NSDictionary *)arg4 reply:(void (^)(unsigned long long, NSError *))arg5;
- (void)setSequenceEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 channelIndex:(unsigned long long)arg3 reply:(void (^)(NSError *))arg4;
- (void)loadVibePattern:(NSDictionary *)arg1 reply:(void (^)(unsigned long long, NSError *))arg2;
- (void)loadHapticSequenceFromEvents:(NSArray *)arg1 reply:(void (^)(unsigned long long, double, unsigned long long, NSError *))arg2;
- (void)loadHapticSequenceFromData:(NSData *)arg1 reply:(void (^)(unsigned long long, double, unsigned long long, NSError *))arg2;
- (void)loadHapticEvent:(NSDictionary *)arg1 reply:(void (^)(unsigned long long, NSError *))arg2;
- (void)setChannelEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 reply:(void (^)(NSError *))arg3;
- (void)removeChannel:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)requestChannels:(unsigned long long)arg1 reply:(void (^)(NSArray *, NSError *))arg2;
- (void)releaseChannels;
- (void)setPlayerBehavior:(unsigned long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)getHapticLatency:(void (^)(double, NSError *))arg1;
- (void)releaseClientResources;
- (void)allocateClientResources:(void (^)(CAXPCObject *, unsigned int, NSError *))arg1;
- (void)setSessionID:(unsigned int)arg1 isShared:(_Bool)arg2 reply:(void (^)(unsigned long long))arg3;
@end

