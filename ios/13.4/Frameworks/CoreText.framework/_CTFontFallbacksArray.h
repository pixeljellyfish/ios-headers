//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSArray.h>

@class NSMutableArray;

__attribute__((visibility("hidden")))
@interface _CTFontFallbacksArray : NSArray
{
    struct TUnfairLock _lock;
    // Error parsing type: r^{TBaseFont=^^?{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFURL *>={atomic<const __CFURL *>={__cxx_atomic_impl<const __CFURL *, std::__1::__cxx_atomic_base_impl<const __CFURL *> >=A^{__CFURL}}}}{TCFRef<CGFont *>={atomic<CGFont *>={__cxx_atomic_impl<CGFont *, std::__1::__cxx_atomic_base_impl<CGFont *> >=A^{CGFont}}}}{TUnfairLock={os_unfair_lock_s=I}}{TCFRef<__CFDictionary *>={atomic<__CFDictionary *>={__cxx_atomic_impl<__CFDictionary *, std::__1::__cxx_atomic_base_impl<__CFDictionary *> >=A^{__CFDictionary}}}}[2{TCFRef<const __CFArray *>={atomic<const __CFArray *>={__cxx_atomic_impl<const __CFArray *, std::__1::__cxx_atomic_base_impl<const __CFArray *> >=A^{__CFArray}}}}][2{TCFRef<const __CFCharacterSet *>={atomic<const __CFCharacterSet *>={__cxx_atomic_impl<const __CFCharacterSet *, std::__1::__cxx_atomic_base_impl<const __CFCharacterSet *> >=A^{__CFCharacterSet}}}}]{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{TCFRef<const __CFCharacterSet *>={atomic<const __CFCharacterSet *>={__cxx_atomic_impl<const __CFCharacterSet *, std::__1::__cxx_atomic_base_impl<const __CFCharacterSet *> >=A^{__CFCharacterSet}}}}{atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}{atomic<const TBMPDataCache *>={__cxx_atomic_impl<const TBMPDataCache *, std::__1::__cxx_atomic_base_impl<const TBMPDataCache *> >=A^{TBMPDataCache}}}{atomic<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *>={__cxx_atomic_impl<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *, std::__1::__cxx_atomic_base_impl<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *> >=A^{unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > >}}}{atomic<unsigned short>={__cxx_atomic_impl<unsigned short, std::__1::__cxx_atomic_base_impl<unsigned short> >=AS}}{TUnfairLock={os_unfair_lock_s=I}}{pair<const unsigned short *, const unsigned short *>=^S^S}{atomic<TTraitsValues *>={__cxx_atomic_impl<TTraitsValues *, std::__1::__cxx_atomic_base_impl<TTraitsValues *> >=A^{TTraitsValues}}}{StrikeMetrics=dddI{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}B}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<CTFontFormat>={__cxx_atomic_impl<CTFontFormat, std::__1::__cxx_atomic_base_impl<CTFontFormat> >=AI}}{TUnfairLock={os_unfair_lock_s=I}}{array<std::__1::unordered_map<unsigned int, OTL::Lookup, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OTL::Lookup> > >, 2>=[2{unordered_map<unsigned int, OTL::Lookup, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OTL::Lookup> > >={__hash_table<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, OTL::Lookup> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::equal_to<unsigned int>, true> >=f}}}]}{atomic<unsigned short>={__cxx_atomic_impl<unsigned short, std::__1::__cxx_atomic_base_impl<unsigned short> >=AS}}{TUnfairLock={os_unfair_lock_s=I}}{TInlineVector<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1>=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{__compressed_pair<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> > *, TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1> >=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1>={type=[8C]}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}}}}{TInlineVector<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4>=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{__compressed_pair<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> > *, TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4> >=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4>={type=[32C]}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}}}}{array<TCFRef<__CFDictionary *>, 7>=[7{TCFRef<__CFDictionary *>={atomic<__CFDictionary *>={__cxx_atomic_impl<__CFDictionary *, std::__1::__cxx_atomic_base_impl<__CFDictionary *> >=A^{__CFDictionary}}}}]}}, name: _baseFont
    const struct TTraitsValues *_refTraits;
    unsigned long long _count;
    NSArray *_cascade;
    NSMutableArray *_fallbacks;
    unsigned long long _hash;
    int _uiUse;
}

- (id).cxx_construct;
- (struct __CTFontDescriptor *)cachedDescriptorForCharacter:(unsigned short)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1 shouldLock:(_Bool)arg2 addRanges:(_Bool)arg3;
- (unsigned long long)count;
- (void)dealloc;
-     // Error parsing type: @36@0:8r^{TBaseFont=^^?{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFData *>={atomic<const __CFData *>={__cxx_atomic_impl<const __CFData *, std::__1::__cxx_atomic_base_impl<const __CFData *> >=A^{__CFData}}}}{TCFRef<const __CFURL *>={atomic<const __CFURL *>={__cxx_atomic_impl<const __CFURL *, std::__1::__cxx_atomic_base_impl<const __CFURL *> >=A^{__CFURL}}}}{TCFRef<CGFont *>={atomic<CGFont *>={__cxx_atomic_impl<CGFont *, std::__1::__cxx_atomic_base_impl<CGFont *> >=A^{CGFont}}}}{TUnfairLock={os_unfair_lock_s=I}}{TCFRef<__CFDictionary *>={atomic<__CFDictionary *>={__cxx_atomic_impl<__CFDictionary *, std::__1::__cxx_atomic_base_impl<__CFDictionary *> >=A^{__CFDictionary}}}}[2{TCFRef<const __CFArray *>={atomic<const __CFArray *>={__cxx_atomic_impl<const __CFArray *, std::__1::__cxx_atomic_base_impl<const __CFArray *> >=A^{__CFArray}}}}][2{TCFRef<const __CFCharacterSet *>={atomic<const __CFCharacterSet *>={__cxx_atomic_impl<const __CFCharacterSet *, std::__1::__cxx_atomic_base_impl<const __CFCharacterSet *> >=A^{__CFCharacterSet}}}}]{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{TCFRef<const __CFCharacterSet *>={atomic<const __CFCharacterSet *>={__cxx_atomic_impl<const __CFCharacterSet *, std::__1::__cxx_atomic_base_impl<const __CFCharacterSet *> >=A^{__CFCharacterSet}}}}{atomic<long>={__cxx_atomic_impl<long, std::__1::__cxx_atomic_base_impl<long> >=Aq}}{atomic<const TBMPDataCache *>={__cxx_atomic_impl<const TBMPDataCache *, std::__1::__cxx_atomic_base_impl<const TBMPDataCache *> >=A^{TBMPDataCache}}}{atomic<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *>={__cxx_atomic_impl<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *, std::__1::__cxx_atomic_base_impl<const std::__1::unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > > *> >=A^{unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short> > >}}}{atomic<unsigned short>={__cxx_atomic_impl<unsigned short, std::__1::__cxx_atomic_base_impl<unsigned short> >=AS}}{TUnfairLock={os_unfair_lock_s=I}}{pair<const unsigned short *, const unsigned short *>=^S^S}{atomic<TTraitsValues *>={__cxx_atomic_impl<TTraitsValues *, std::__1::__cxx_atomic_base_impl<TTraitsValues *> >=A^{TTraitsValues}}}{StrikeMetrics=dddI{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}B}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}{atomic<CTFontFormat>={__cxx_atomic_impl<CTFontFormat, std::__1::__cxx_atomic_base_impl<CTFontFormat> >=AI}}{TUnfairLock={os_unfair_lock_s=I}}{array<std::__1::unordered_map<unsigned int, OTL::Lookup, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OTL::Lookup> > >, 2>=[2{unordered_map<unsigned int, OTL::Lookup, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, OTL::Lookup> > >={__hash_table<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, OTL::Lookup> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, OTL::Lookup>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, OTL::Lookup>, std::__1::equal_to<unsigned int>, true> >=f}}}]}{atomic<unsigned short>={__cxx_atomic_impl<unsigned short, std::__1::__cxx_atomic_base_impl<unsigned short> >=AS}}{TUnfairLock={os_unfair_lock_s=I}}{TInlineVector<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1>=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{__compressed_pair<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> > *, TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1> >=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 1>={type=[8C]}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}}}}{TInlineVector<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4>=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{__compressed_pair<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> > *, TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4> >=^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}{TInlineBufferAllocator<std::__1::unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >, 4>={type=[32C]}^{unique_ptr<unsigned short const[], std::__1::default_delete<unsigned short const[]> >}}}}{array<TCFRef<__CFDictionary *>, 7>=[7{TCFRef<__CFDictionary *>={atomic<__CFDictionary *>={__cxx_atomic_impl<__CFDictionary *, std::__1::__cxx_atomic_base_impl<__CFDictionary *> >=A^{__CFDictionary}}}}]}}16@24i32, name: initWithBaseFont:cascade:uiUse:

@end

