//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class CAShapeLayer, CLCircularRegion, MKCircle, MKMapView, NSMeasurementFormatter, UIColor, UIImageView;
@protocol TTRIReminderLocationPickerMapDragRadiusViewDelegate;

@interface TTRIReminderLocationPickerMapDragRadiusView : UIView
{
    _Bool _isMinimum;
    _Bool _isMaximum;
    _Bool _isDragging;
    MKMapView *_mapView;
    id <TTRIReminderLocationPickerMapDragRadiusViewDelegate> _delegate;
    NSMeasurementFormatter *_measurementFormatter;
    double _minimumRadius;
    double _maximumRadius;
    double _radiusPaddingMultiplier;
    UIColor *_circleColor;
    UIColor *_handleColor;
    UIImageView *_handleImageView;
    CAShapeLayer *_shapeLayer;
    CLCircularRegion *_region;
    MKCircle *_overlay;
    struct CGPoint _initialHandleCenterForDraggin;
}

- (void).cxx_destruct;
@property(nonatomic) struct CGPoint initialHandleCenterForDraggin; // @synthesize initialHandleCenterForDraggin=_initialHandleCenterForDraggin;
@property(nonatomic) _Bool isDragging; // @synthesize isDragging=_isDragging;
@property(retain, nonatomic) MKCircle *overlay; // @synthesize overlay=_overlay;
@property(retain, nonatomic) CLCircularRegion *region; // @synthesize region=_region;
@property(nonatomic) _Bool isMaximum; // @synthesize isMaximum=_isMaximum;
@property(nonatomic) _Bool isMinimum; // @synthesize isMinimum=_isMinimum;
@property(retain, nonatomic) CAShapeLayer *shapeLayer; // @synthesize shapeLayer=_shapeLayer;
@property(retain, nonatomic) UIImageView *handleImageView; // @synthesize handleImageView=_handleImageView;
@property(retain, nonatomic) UIColor *handleColor; // @synthesize handleColor=_handleColor;
@property(retain, nonatomic) UIColor *circleColor; // @synthesize circleColor=_circleColor;
@property(nonatomic) double radiusPaddingMultiplier; // @synthesize radiusPaddingMultiplier=_radiusPaddingMultiplier;
@property(nonatomic) double maximumRadius; // @synthesize maximumRadius=_maximumRadius;
@property(nonatomic) double minimumRadius; // @synthesize minimumRadius=_minimumRadius;
@property(retain, nonatomic) NSMeasurementFormatter *measurementFormatter; // @synthesize measurementFormatter=_measurementFormatter;
@property(nonatomic) __weak id <TTRIReminderLocationPickerMapDragRadiusViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
- (void)_ttriAccessibilityUpdateWithRadius:(double)arg1;
- (double)_ttriAccessibilityRadiusIncrement;
- (double)_ttriAccessibilityRadiusByAdding:(double)arg1;
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (struct CGRect)accessibilityFrame;
- (_Bool)isAccessibilityElement;
- (void)_centerAndZoomToFitRegion:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_usesMetric;
- (id)_measurementFor:(double)arg1 fromUnit:(id)arg2 toUnit:(id)arg3 normalized:(_Bool)arg4;
- (id)_currentHandleDistanceMeasurement;
- (double)_radiusForPoint:(struct CGPoint)arg1;
- (double)_currentHandleDistance;
- (struct CGPoint)_maxPoint;
- (struct CGPoint)_minPoint;
- (struct CGPoint)_pointForRadius:(double)arg1;
- (void)_hideCircleAfterDelay;
- (void)_removeHandle;
- (void)_animateHandleIn:(_Bool)arg1;
- (id)_shapeLayerWithEndPoint:(struct CGPoint)arg1;
- (id)_bezierPathWithEndPoint:(struct CGPoint)arg1;
- (void)_popAnimateHandle;
- (void)_updateRegionWithRadius:(double)arg1;
- (void)_updateRegionWithPoint:(struct CGPoint)arg1;
- (void)_updateHandleImageViewWithPoint:(struct CGPoint)arg1;
- (void)_updateHandleImageView;
@property(nonatomic) double radius;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)stopEditing;
- (void)startEditingRegion:(id)arg1;
- (void)handlePanGesture:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1 mapView:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

