//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKSEventFocusObserving-Protocol.h"
#import "CARSessionObserving-Protocol.h"
#import "CarSceneController-Protocol.h"
#import "SearchSessionObserver-Protocol.h"

@class CARSessionStatus, CarChromeViewController, CarClusterSuggestionController, CarDisplayWindow, CarMapsSuggestionsController, CarRouteGeniusManager, GEOCarInfo, GuidanceObserver, NSDate, NSDictionary, NSOperation, NSString, NSTimer, NSUUID, PlatformController, SearchSession, UIAlertController, UILongPressGestureRecognizer, UIScreen, UITraitCollection, UIWindowScene;
@protocol CarDisplayDelegate, NSObject;

__attribute__((visibility("hidden")))
@interface CarDisplayController : NSObject <SearchSessionObserver, BKSEventFocusObserving, CARSessionObserving, CarSceneController>
{
    NSTimer *_idleTimeoutTimer;
    NSTimer *_screenOwnershipSuppressionTimer;
    NSOperation *_screenUpdateOperation;
    _Bool _updatingScreen;
    _Bool _willEnterForeground;
    NSDate *_dateOfLastScreenUpdate;
    _Bool _hasRunNewScreenRefreshTasks;
    struct CGSize _screenSize;
    _Bool _isPreparingNavigation;
    UIAlertController *_simulationAlertController;
    _Bool _hasArrived;
    NSTimer *_arrivalResetTimer;
    id <NSObject> _externalNavigatonStateObserver;
    _Bool _observingMapsAppState;
    SearchSession *_searchSession;
    UILongPressGestureRecognizer *_nightModeToggleGesture;
    long long _queuedInterruptionKind;
    NSDictionary *_queuedInterruptionUserInfo;
    CDUnknownBlockType _queuedInterruptionHandler;
    CDUnknownBlockType _queuedInterruptionDismissalBlock;
    NSUUID *_queuedInterruptionKey;
    PlatformController *_platformController;
    CarChromeViewController *_chromeViewController;
    CarMapsSuggestionsController *_mapsSuggestionsController;
    id <CarDisplayDelegate> _delegate;
    UIScreen *_screen;
    CarDisplayWindow *_window;
    CarClusterSuggestionController *_clusterSuggestionController;
    GuidanceObserver *_guidanceObserver;
    CarRouteGeniusManager *_routeGeniusManager;
    CARSessionStatus *_carSessionStatus;
    UIWindowScene *_windowScene;
    NSDate *_backgroundAutoHideStateTrackingDate;
    unsigned long long _state;
}

+ (double)debugLaunchPerformanceDelay;
+ (_Bool)debugLaunchPerformance;
+ (void)launchPerformanceSetup;
+ (unsigned long long)maximumListLength;
+ (long long)enablingState;
+ (void)_updateCarIntegrationState;
+ (_Bool)_isCarIntegrationSupported;
+ (_Bool)isCarPlayAvailable;
+ (id)sharedInstance;
+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSDate *backgroundAutoHideStateTrackingDate; // @synthesize backgroundAutoHideStateTrackingDate=_backgroundAutoHideStateTrackingDate;
@property(retain, nonatomic) UIWindowScene *windowScene; // @synthesize windowScene=_windowScene;
@property(retain, nonatomic) CARSessionStatus *carSessionStatus; // @synthesize carSessionStatus=_carSessionStatus;
@property(retain, nonatomic) CarRouteGeniusManager *routeGeniusManager; // @synthesize routeGeniusManager=_routeGeniusManager;
@property(retain, nonatomic) GuidanceObserver *guidanceObserver; // @synthesize guidanceObserver=_guidanceObserver;
@property(retain, nonatomic) CarClusterSuggestionController *clusterSuggestionController; // @synthesize clusterSuggestionController=_clusterSuggestionController;
@property(readonly, nonatomic) SearchSession *searchSession; // @synthesize searchSession=_searchSession;
@property(readonly, nonatomic) struct CGSize screenSize; // @synthesize screenSize=_screenSize;
@property(retain, nonatomic) CarDisplayWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property(nonatomic) __weak id <CarDisplayDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CarMapsSuggestionsController *mapsSuggestionsController; // @synthesize mapsSuggestionsController=_mapsSuggestionsController;
@property(retain, nonatomic) CarChromeViewController *chromeViewController; // @synthesize chromeViewController=_chromeViewController;
@property(retain, nonatomic) PlatformController *platformController; // @synthesize platformController=_platformController;
- (void)_registerCarInfoForGEOLogging;
- (void)_setOverrideShouldSuppressChrome:(_Bool)arg1 refreshScreenConnection:(_Bool)arg2;
@property(nonatomic) _Bool overrideShouldSuppressChrome;
- (void)didFinishLaunchingSuspendedWithOptions:(id)arg1;
- (void)_removeQueuedInterruptionWithKey:(id)arg1;
- (void)_presentQueuedInterruptionIfNeeded;
- (CDUnknownBlockType)presentInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_prepareNearby;
- (void)_stopObservingExternalNavigationState;
- (void)_startObservingExternalNavigationStateIfNeeded;
- (void)_stopObservingSharedAppState;
- (void)_startObservingSharedAppState;
@property(readonly, nonatomic, getter=isAnyCarSceneHostingDrivingNavigation) _Bool anyCarSceneHostingDrivingNavigation;
@property(readonly, nonatomic, getter=isAnyCarSceneHostingNavigation) _Bool anyCarSceneHostingNavigation;
@property(readonly, nonatomic, getter=isCarAppSceneHostingNavigation) _Bool carAppSceneHostingNavigation;
- (void)detourToMapItem:(id)arg1;
- (void)searchSessionDidInvalidate:(id)arg1;
- (void)searchSessionDidFail:(id)arg1;
- (void)searchSessionDidChangeSearchResults:(id)arg1;
- (void)searchSessionWillPerformSearch:(id)arg1;
- (void)searchSessionDidChangeSearchFieldItem:(id)arg1;
- (void)_searchSessionWillStart:(id)arg1;
- (id)processSearchFieldItem:(id)arg1 searchInfo:(id)arg2 userInfo:(id)arg3;
- (void)focusedDeferralPropertiesDidChange:(id)arg1;
- (_Bool)_shouldSendEvent:(id)arg1 toCarDisplayWindow:(id)arg2;
@property(readonly, nonatomic) long long connectionType;
@property(readonly, nonatomic) long long touchscreenFidelity;
@property(readonly, nonatomic) _Bool supportsFocusInteractionModel;
@property(readonly, nonatomic) _Bool supportsTouchInteractionModel;
@property(readonly, nonatomic) unsigned long long supportedInteractionModels;
@property(readonly, nonatomic) unsigned long long primaryInteractionModel;
@property(readonly, nonatomic) long long interactionModel;
- (_Bool)supportsInteractionModels:(unsigned long long)arg1;
- (void)sceneDidDisconnect:(id)arg1;
- (void)_mapsCar_scene:(id)arg1 willConnectToSession:(id)arg2 options:(id)arg3;
- (void)_carSessionController_updateNavigationHostingState;
@property(readonly, nonatomic, getter=isCurrentlyConnectedToCarAppScene) _Bool currentlyConnectedToCarAppScene;
@property(readonly, nonatomic, getter=isCurrentlyConnectedToAnyCarScene) _Bool currentlyConnectedToAnyCarScene;
- (void)_updateForCurrentScreen;
- (void)_setNeedsScreenUpdate;
- (_Bool)_activelyOnScreen;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_screenDidConnect:(id)arg1;
- (id)availableCarPlayScreen;
@property(readonly, nonatomic) GEOCarInfo *connectedCarAnalyticsInfo;
@property(readonly, nonatomic) UITraitCollection *screenTraitCollection;
- (void)_popIfTopModeIsInvalidAfterReconnection:(_Bool)arg1;
- (void)_idleTimeoutFired:(id)arg1;
- (void)_stopTimingIdleTimout;
- (void)_startTimingIdleTimeout;
- (void)_stopScreenOwnershipSuppressionTimer;
- (void)_startScreenOwnershipSuppressionTimer;
- (void)runNewScreenRefreshTasksIfNeeded;
- (void)_externalAccessoryUpdated;
- (void)_willEnterForeground:(id)arg1;
- (void)_didEnterBackground:(id)arg1;
- (void)_carDisplayDidFinishLaunching:(id)arg1;
- (void)_tearDownClusterSuggestionController;
- (void)_setupClusterSuggestionControllerIfNeeded;
- (void)_tearDownMapsSuggestionsController;
- (void)_setChromeInactive:(_Bool)arg1 afterDelay:(double)arg2;
- (void)_setChromeSuppressed:(_Bool)arg1;
- (void)_destroyChrome;
- (id)modesForCurrentAppState;
- (void)_prepareChromeForFirstUse;
- (double)_activationDelay;
- (void)_tearDownCarPlayIfNeeded;
- (void)_setupCarPlayIfNeeded;
- (void)prepareCarPlay;
- (_Bool)_validateTransitionFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isChromeAvailable) _Bool chromeAvailable;
- (void)sessionDidDisconnect:(id)arg1;
- (void)sessionDidConnect:(id)arg1;
- (void)updateForCurrentEnablingState;
- (void)_geoServiceDidUpdateCountryConfiguration:(id)arg1;
- (void)_carDisplayDidUpdateEnablingState:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

