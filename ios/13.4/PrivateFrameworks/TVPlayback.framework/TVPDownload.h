//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <TVPlayback/AVAssetDownloadDelegate-Protocol.h>

@class AVAggregateAssetDownloadTask, NSArray, NSDictionary, NSError, NSMapTable, NSNumber, NSPointerArray, NSProgress, NSString, TVPDownloadSession, TVPMediaItemLoader, TVPReportingSession, TVPStateMachine;
@protocol TVPMediaItem;

@interface TVPDownload : NSObject <AVAssetDownloadDelegate>
{
    _Bool _performKeyFetchOnly;
    _Bool _allowCellularUsage;
    _Bool _allowHDR;
    _Bool _allowMultichannelAudio;
    _Bool _includeDefaultAudioOption;
    _Bool _useLegacyAudioSettings;
    _Bool _downloadIsComplete;
    NSObject<TVPMediaItem> *_mediaItem;
    long long _state;
    NSError *_error;
    NSNumber *_minimumRequiredMediaBitrate;
    NSArray *_preferredAudioLanguageCodes;
    NSDictionary *_userInfo;
    TVPStateMachine *_stateMachine;
    TVPMediaItemLoader *_mediaItemLoader;
    TVPDownloadSession *_downloadSession;
    AVAggregateAssetDownloadTask *_downloadTask;
    NSPointerArray *_delegates;
    NSProgress *_downloadProgress;
    NSMapTable *_mediaSelectionToProgressMap;
    unsigned long long _downloadInitiationBackgroundTask;
    unsigned long long _downloadTerminationBackgroundTask;
    TVPReportingSession *_reportingSession;
    unsigned long long _numMediaSelectionsThatWillReceiveDownloadProgress;
    unsigned long long _numMediaSelectionsCompleted;
    struct CGSize _minimumRequiredPresentationSize;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long numMediaSelectionsCompleted; // @synthesize numMediaSelectionsCompleted=_numMediaSelectionsCompleted;
@property(nonatomic) unsigned long long numMediaSelectionsThatWillReceiveDownloadProgress; // @synthesize numMediaSelectionsThatWillReceiveDownloadProgress=_numMediaSelectionsThatWillReceiveDownloadProgress;
@property(retain, nonatomic) TVPReportingSession *reportingSession; // @synthesize reportingSession=_reportingSession;
@property(nonatomic) unsigned long long downloadTerminationBackgroundTask; // @synthesize downloadTerminationBackgroundTask=_downloadTerminationBackgroundTask;
@property(nonatomic) unsigned long long downloadInitiationBackgroundTask; // @synthesize downloadInitiationBackgroundTask=_downloadInitiationBackgroundTask;
@property(retain, nonatomic) NSMapTable *mediaSelectionToProgressMap; // @synthesize mediaSelectionToProgressMap=_mediaSelectionToProgressMap;
@property(retain, nonatomic) NSProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(retain, nonatomic) NSPointerArray *delegates; // @synthesize delegates=_delegates;
@property(nonatomic) _Bool downloadIsComplete; // @synthesize downloadIsComplete=_downloadIsComplete;
@property(retain, nonatomic) AVAggregateAssetDownloadTask *downloadTask; // @synthesize downloadTask=_downloadTask;
@property(nonatomic) __weak TVPDownloadSession *downloadSession; // @synthesize downloadSession=_downloadSession;
@property(retain, nonatomic) TVPMediaItemLoader *mediaItemLoader; // @synthesize mediaItemLoader=_mediaItemLoader;
@property(retain, nonatomic) TVPStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) _Bool useLegacyAudioSettings; // @synthesize useLegacyAudioSettings=_useLegacyAudioSettings;
@property(retain, nonatomic) NSArray *preferredAudioLanguageCodes; // @synthesize preferredAudioLanguageCodes=_preferredAudioLanguageCodes;
@property(nonatomic) _Bool includeDefaultAudioOption; // @synthesize includeDefaultAudioOption=_includeDefaultAudioOption;
@property(nonatomic) _Bool allowMultichannelAudio; // @synthesize allowMultichannelAudio=_allowMultichannelAudio;
@property(nonatomic) _Bool allowHDR; // @synthesize allowHDR=_allowHDR;
@property(retain, nonatomic) NSNumber *minimumRequiredMediaBitrate; // @synthesize minimumRequiredMediaBitrate=_minimumRequiredMediaBitrate;
@property(nonatomic) struct CGSize minimumRequiredPresentationSize; // @synthesize minimumRequiredPresentationSize=_minimumRequiredPresentationSize;
@property(nonatomic) _Bool allowCellularUsage; // @synthesize allowCellularUsage=_allowCellularUsage;
@property(nonatomic) _Bool performKeyFetchOnly; // @synthesize performKeyFetchOnly=_performKeyFetchOnly;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSObject<TVPMediaItem> *mediaItem; // @synthesize mediaItem=_mediaItem;
- (void)_registerStateMachineHandlers;
- (void)_mediaItemLoaderStateDidChangeTo:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 didLoadTimeRange:(CDStruct_5c5366e1)arg3 totalTimeRangesLoaded:(id)arg4 timeRangeExpectedToLoad:(CDStruct_5c5366e1)arg5 forMediaSelection:(id)arg6;
- (void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 didCompleteForMediaSelection:(id)arg3;
- (void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 willDownloadToURL:(id)arg3;
- (id)descriptionForState:(long long)arg1;
- (void)failWithError:(id)arg1;
- (void)cancel;
- (void)pause;
- (void)start;
@property(readonly, nonatomic) double progress;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithMediaItem:(id)arg1 downloadSession:(id)arg2 existingDownloadTask:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

