//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 12 2019 23:20:19).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ACXDeviceConnectionProtocol-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_os_transaction;

@interface ACXDeviceConnectionClient : NSObject <ACXDeviceConnectionProtocol>
{
    NSXPCConnection *_xpcConnection;
    NSObject<OS_os_transaction> *_observerTransaction;
}

+ (void)messageAllObserversForApplicationDatabaseResyncedForDeviceWithPairingID:(id)arg1;
+ (void)messageAllObserversForApplicationsUninstalled:(id)arg1 onDeviceWithPairingID:(id)arg2;
+ (void)messageAllObserversForApplicationsUpdated:(id)arg1 onDeviceWithPairingID:(id)arg2;
+ (void)messageAllObserversForApplicationsInstalled:(id)arg1 onDeviceWithPairingID:(id)arg2;
+ (void)messageAllObserversWithInstallProgressForApplication:(id)arg1 progress:(double)arg2 phase:(unsigned long long)arg3;
+ (void)messageAllObserversWithInstallStateUpdate:(id)arg1;
+ (void)configureService;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_os_transaction> *observerTransaction; // @synthesize observerTransaction=_observerTransaction;
@property(nonatomic) __weak NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void)acknowledgeTestFlightInstallBegunForApp:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)installRequestFailedForApp:(id)arg1 forDeviceWithPairingID:(id)arg2 failureReason:(id)arg3 wasUserInitiated:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)systemAppIsInstallableOnDeviceWithPairingID:(id)arg1 withBundleID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchInstallableSystemAppWithBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchInstallableSystemAppBundleIDsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchLocalizedValuesFromAllDevicesForInfoPlistKeys:(id)arg1 forAppWithBundleID:(id)arg2 fetchingFirstMatchingLocalizationInList:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchApplicationDatabaseSyncInformationForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applicationIsInstalledOnAnyPairedDeviceWithCompanionBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applicationIsInstalledOnAnyPairedDeviceWithBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applicationIsInstalledOnDeviceWithPairingID:(id)arg1 withCompanionBundleID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)applicationIsInstalledOnDeviceWithPairingID:(id)arg1 withBundleID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_applicationIsInstalledOnDevice:(id)arg1 withCompanionBundleID:(id)arg2 error:(id *)arg3;
- (_Bool)_applicationIsInstalledOnDevice:(id)arg1 withBundleID:(id)arg2 error:(id *)arg3;
- (void)fetchLocallyAvailableApplicationWithContainingApplicationBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchInstalledWatchAppWithBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchLocallyAvailableWatchAppWithBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)_setApplicationStatusForApp:(id)arg1 forDeviceWithPairingID:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (void)fetchInstalledWatchAppBundleIDsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchLocallyAvailableWatchAppBundleIDsWithCompletion:(CDUnknownBlockType)arg1;
- (void)cancelUpdatePendingForCompanionApp:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setUpdatePendingForCompanionApp:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updatePreferencesForApplicationWithIdentifier:(id)arg1 preferences:(id)arg2 writingToPreferencesLocation:(unsigned long long)arg3 forDeviceWithPairingID:(id)arg4 options:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)fetchProvisioningProfilesForApplicationWithBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchProvisioningProfilesForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeProvisioningProfileWithID:(id)arg1 fromDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)installProvisioningProfileWithData:(id)arg1 onDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getAlwaysInstallForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeApplication:(id)arg1 fromDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)installApplicationAtURL:(id)arg1 onDeviceWithPairingID:(id)arg2 installOptions:(id)arg3 size:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)installApplication:(id)arg1 withProvisioningProfileInfo:(id)arg2 forTestFlight:(_Bool)arg3 onDeviceWithPairingID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)retryPendingAppInstallationsOnDeviceWithPairingID:(id)arg1;
- (void)cancelPendingInstallations;
- (void)installAllApplications;
- (void)fetchWatchAppBundleIDForCompanionAppBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchInfoForApplicationWithBundleID:(id)arg1 forDeviceWithPairingID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchApplicationWithContainingApplicationBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchInstalledCompatibleApplicationsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)activeComplicationsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchInstalledComplicationsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchInstalledApplicationsForDeviceWithPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)disableObservers;
- (void)enableObservers;
@property(readonly, copy) NSString *description;
- (id)_deviceForPairingID:(id)arg1 error:(id *)arg2;
- (id)_gizmoStateForDeviceWithPairingID:(id)arg1 error:(id *)arg2;
- (id)_hasEntitlement:(id)arg1 forRequestType:(id)arg2;
@property(readonly, nonatomic) NSString *clientSigningIdentifier;
@property(readonly, nonatomic) NSString *clientName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

