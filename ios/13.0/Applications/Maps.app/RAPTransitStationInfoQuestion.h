//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "RAPQuestion.h"

#import "RAPLabelMarkerSelectionProtocol-Protocol.h"
#import "RAPMenuItem-Protocol.h"

@class MKMapItemIdentifier, NSError, NSString, UIImage;
@protocol MKMapServiceTicket, RAPMapStateProtocol, RAPMenuItem, RAPPlace;

__attribute__((visibility("hidden")))
@interface RAPTransitStationInfoQuestion : RAPQuestion <RAPLabelMarkerSelectionProtocol, RAPMenuItem>
{
    id <RAPMapStateProtocol> _alternatePlaceContext;
    id <MKMapServiceTicket> _placeTicket;
    RAPQuestion<RAPMenuItem> *_followUpQuestion;
    MKMapItemIdentifier *_placeIdentifier;
    id <RAPMapStateProtocol> _placePickingMapState;
    NSError *_loadingError;
}

@property(readonly, nonatomic) NSError *loadingError; // @synthesize loadingError=_loadingError;
@property(readonly, nonatomic) id <RAPMapStateProtocol> placePickingMapState; // @synthesize placePickingMapState=_placePickingMapState;
@property(copy, nonatomic) MKMapItemIdentifier *placeIdentifier; // @synthesize placeIdentifier=_placeIdentifier;
- (void).cxx_destruct;
- (id)place;
- (void)_fillSubmissionParameters:(id)arg1;
- (void)_fillSubmittableProblem:(id)arg1;
- (_Bool)_isRecursivelyComplete;
- (_Bool)isComplete;
@property(readonly, nonatomic) id <RAPPlace> reportedPlace;
@property(readonly, nonatomic) RAPQuestion<RAPMenuItem> *followUpQuestion; // @synthesize followUpQuestion=_followUpQuestion;
- (id)_alternatePlaceContext;
- (id)_alternateMapViewContext;
- (void)setSelectedLabelMarker:(id)arg1 withMapState:(id)arg2;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic) NSString *localizedPlacePickingPrompt;
@property(readonly, nonatomic) unsigned long long placePickingPreferredMapType;
@property(readonly, nonatomic) int featureType;
@property(readonly, nonatomic) CDStruct_02837cd9 placePickingMapRect;
@property(readonly, nonatomic) long long questionCategory;
@property(readonly, nonatomic) int userAction;
@property(readonly, nonatomic) int analyticTarget;
@property(readonly, nonatomic) NSString *localizedTitle;

// Remaining properties
@property(readonly, nonatomic) int backAction;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UIImage *image;
@property(readonly, nonatomic) NSString *localizedDescription;
@property(copy, nonatomic) NSString *localizedServerControlledDescription;
@property(readonly) Class superclass;

@end

