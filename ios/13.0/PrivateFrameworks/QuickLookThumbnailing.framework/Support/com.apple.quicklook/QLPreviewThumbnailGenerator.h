//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, QLPlatformImage, QLThumbnailItem, QLThumbnailMetadata;
@protocol OS_dispatch_queue;

@interface QLPreviewThumbnailGenerator : NSObject
{
    QLThumbnailItem *_item;
    struct CGSize _size;
    double _minSize;
    double _scale;
    QLPlatformImage *_thumbnailImage;
    int _status;
    NSObject<OS_dispatch_queue> *_generationQueue;
    unsigned long long _badgeType;
    _Bool _addDecorations;
    int _flavor;
    _Bool _wantsLowQuality;
    _Bool _resultIsLowQuality;
    _Bool _resultHasIconModeApplied;
    _Bool _wantsJPEGRepresentationInstead;
    _Bool _wantsBaseline;
    int _interpolationQuality;
    QLThumbnailMetadata *generatedProperties;
    NSData *_jpegRepresentation;
    unsigned long long _sandboxExtension;
    struct CGRect _contentRect;
}

+ (id)mutableAttributedStringForThumbnailWithURL:(id)arg1 documentAttributes:(id *)arg2;
+ (id)mutableAttributedStringForThumbnailWithData:(id)arg1 uti:(id)arg2 encoding:(unsigned int)arg3 documentAttributes:(id *)arg4;
+ (id)readingOptionsFromUTI:(id)arg1 encoding:(unsigned int)arg2;
+ (id)_textDocumentTypeFromUTI:(id)arg1;
+ (id)generateIconDataFromThumbnailData:(id)arg1 inputFormat:(id)arg2 outputFormat:(id *)arg3 outputContentRect:(struct CGRect *)arg4 desiredSize:(struct CGSize)arg5 desiredScale:(double)arg6 desiredFlavor:(int)arg7 wantsLowQuality:(_Bool)arg8 iconVariant:(long long)arg9;
+ (double)cornerRadiusForSize:(struct CGSize)arg1;
+ (_Bool)canGenerateThumbnailForURL:(id)arg1;
+ (id)generatorForURL:(id)arg1 size:(struct CGSize)arg2;
+ (id)generatorForURL:(id)arg1 maxSize:(struct CGSize)arg2 minSize:(double)arg3 scale:(double)arg4 lowQuality:(_Bool)arg5 decorations:(_Bool)arg6 wantsBaseline:(_Bool)arg7;
+ (id)generatorForURL:(id)arg1 maxSize:(struct CGSize)arg2 scale:(double)arg3 lowQuality:(_Bool)arg4 decorations:(_Bool)arg5 wantsBaseline:(_Bool)arg6;
+ (id)generatorForThumbnailItem:(id)arg1 size:(struct CGSize)arg2 minSize:(double)arg3 scale:(double)arg4;
+ (id)generatorForThumbnailItem:(id)arg1 size:(struct CGSize)arg2 scale:(double)arg3;
@property(retain) QLThumbnailItem *item; // @synthesize item=_item;
@property _Bool wantsBaseline; // @synthesize wantsBaseline=_wantsBaseline;
@property unsigned long long sandboxExtension; // @synthesize sandboxExtension=_sandboxExtension;
@property(readonly) NSData *jpegRepresentation; // @synthesize jpegRepresentation=_jpegRepresentation;
@property _Bool wantsJPEGRepresentationInstead; // @synthesize wantsJPEGRepresentationInstead=_wantsJPEGRepresentationInstead;
@property _Bool resultHasIconModeApplied; // @synthesize resultHasIconModeApplied=_resultHasIconModeApplied;
@property struct CGRect contentRect; // @synthesize contentRect=_contentRect;
@property int interpolationQuality; // @synthesize interpolationQuality=_interpolationQuality;
@property double minSize; // @synthesize minSize=_minSize;
@property int status; // @synthesize status=_status;
@property(retain) QLThumbnailMetadata *generatedProperties; // @synthesize generatedProperties;
@property _Bool addDecorations; // @synthesize addDecorations=_addDecorations;
@property double scale; // @synthesize scale=_scale;
@property _Bool wantsLowQuality; // @synthesize wantsLowQuality=_wantsLowQuality;
@property _Bool resultIsLowQuality; // @synthesize resultIsLowQuality=_resultIsLowQuality;
@property int flavor; // @synthesize flavor=_flavor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *generationQueue; // @synthesize generationQueue=_generationQueue;
@property(retain) QLPlatformImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
- (void).cxx_destruct;
- (void)_generateThumbnailFromThirdPartyExtensionAndReplyWith:(CDUnknownBlockType)arg1;
- (id)_thumbnailForIWorkFile;
- (id)_thumbnailForMovie;
- (id)_thumbnailForText;
- (double)_minimumDimensionForPDFPage:(id)arg1 requestThumbnailSize:(struct CGSize)arg2;
- (id)_thumbnailForPDF;
- (id)_thumbnailForImageSource:(struct CGImageSource *)arg1 contentTypeIdentifier:(id)arg2;
- (id)_thumbnailForImage;
- (id)_thumbnailForLivePhoto;
- (struct CGContext *)_beginContextWithSize:(struct CGSize)arg1;
- (struct CGContext *)_beginContext;
- (void)_replyWithImage:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)cancel;
- (void)generateWithWillStartBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)generateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_generateThumbnailWithWillStartBlock:(CDUnknownBlockType)arg1 andInvokeCompletionBlockOnMainQueue:(CDUnknownBlockType)arg2;
- (struct CGSize)_pixelSize;
- (id)initWithThumbnailItem:(id)arg1 size:(struct CGSize)arg2 minSize:(double)arg3 scale:(double)arg4 decorations:(_Bool)arg5;
- (id)initWithThumbnailItem:(id)arg1 size:(struct CGSize)arg2 minSize:(double)arg3 scale:(double)arg4 lowQuality:(_Bool)arg5 wantsBaseline:(_Bool)arg6 decorations:(_Bool)arg7 badgeType:(unsigned long long)arg8 interpolationQuality:(int)arg9;

@end

