//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MCMClientIdentity, MCMCommandQueue, MCMUserIdentityCache, NSArray, NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface MCMClientConnection : NSObject
{
    NSMutableDictionary *_sanitizedLookup;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
    _Bool _entitled;
    _Bool _allowOtherIdLookup;
    _Bool _allowGroupIdLookup;
    _Bool _unrestricted;
    MCMClientIdentity *_clientIdentity;
    MCMCommandQueue *_commandQueue;
    NSString *_clientBundleIdentifier;
    NSArray *_entitledWipeIdentifiers;
    NSDictionary *_lookup;
    MCMUserIdentityCache *_userIdentityCache;
}

+ (id)privilegedClientConnectionWithUserIdentity:(id)arg1;
+ (id)sharedClientConnection;
@property(readonly, nonatomic) MCMUserIdentityCache *userIdentityCache; // @synthesize userIdentityCache=_userIdentityCache;
@property(readonly, nonatomic) NSDictionary *lookup; // @synthesize lookup=_lookup;
@property(retain, nonatomic) NSArray *entitledWipeIdentifiers; // @synthesize entitledWipeIdentifiers=_entitledWipeIdentifiers;
@property(retain, nonatomic) NSString *clientBundleIdentifier; // @synthesize clientBundleIdentifier=_clientBundleIdentifier;
@property(readonly, nonatomic) MCMCommandQueue *commandQueue; // @synthesize commandQueue=_commandQueue;
@property(nonatomic) _Bool unrestricted; // @synthesize unrestricted=_unrestricted;
@property(nonatomic) _Bool allowGroupIdLookup; // @synthesize allowGroupIdLookup=_allowGroupIdLookup;
@property(nonatomic) _Bool allowOtherIdLookup; // @synthesize allowOtherIdLookup=_allowOtherIdLookup;
@property(nonatomic) _Bool entitled; // @synthesize entitled=_entitled;
@property(readonly, nonatomic) MCMClientIdentity *clientIdentity; // @synthesize clientIdentity=_clientIdentity;
- (void).cxx_destruct;
- (id)_setOfStringsFromArray:(id)arg1;
- (id)_lookupForContainerClass:(unsigned long long)arg1;
- (_Bool)completeWithError:(unsigned long long *)arg1;
- (id)groupContainersForOwnerIdentifier:(id)arg1 userIdentity:(id)arg2 groupContainerClass:(unsigned long long)arg3 withError:(unsigned long long *)arg4;
- (_Bool)isEntitledForLookupWithClass:(unsigned long long)arg1 identifier:(id)arg2;
- (void)deleteUserManagedAssetWithContainerIdentity:(id)arg1 relativePath:(id)arg2 withError:(unsigned long long *)arg3;
- (id)userManagedAssetsPathWithContainerIdentity:(id)arg1 isRelative:(_Bool)arg2 createIfNecessary:(_Bool)arg3 existed:(_Bool *)arg4 withError:(unsigned long long *)arg5;
- (id)stageSharedContentForIdentifier:(id)arg1 sourceRelativePath:(id)arg2 destRelativePath:(id)arg3 withError:(unsigned long long *)arg4;
- (void)retryTestWithNumCrashes:(unsigned long long)arg1 withError:(unsigned long long *)arg2;
- (unsigned long long)diskUsageWithContainerIdentity:(id)arg1 withError:(unsigned long long *)arg2;
- (void)deleteDataContainerContentWithContainerIdentity:(id)arg1 withError:(unsigned long long *)arg2;
- (void)deleteContainerWithContainerIdentity:(id)arg1 transient:(_Bool)arg2 withError:(unsigned long long *)arg3;
- (void)regenerateDirectoryUUIDWithContainerIdentity:(id)arg1 withError:(unsigned long long *)arg2;
- (void)_regenerateAllSystemContainerPaths;
- (void)recreateDefaultStructureWithContainerIdentity:(id)arg1 withError:(unsigned long long *)arg2;
- (id)metadataWithContainerIdentity:(id)arg1 withError:(unsigned long long *)arg2;
- (id)infoValueForKey:(id)arg1 containerIdentity:(id)arg2 useLocking:(_Bool)arg3 withError:(unsigned long long *)arg4;
- (void)setInfoValue:(id)arg1 forKey:(id)arg2 containerIdentity:(id)arg3 useLocking:(_Bool)arg4 withError:(unsigned long long *)arg5;
- (void)deleteContainersOnDeathRowWithCompletion:(CDUnknownBlockType)arg1;
- (void)replaceContainerIdentity:(id)arg1 withContainerIdentity:(id)arg2 preserveOldUUID:(_Bool)arg3 startDeletionThread:(_Bool)arg4 withError:(unsigned long long *)arg5;
- (id)containersWithClass:(unsigned long long)arg1 transient:(_Bool)arg2 withError:(unsigned long long *)arg3;
- (id)createOrLookupContainerWithContainerIdentity:(id)arg1 createIfNecessary:(_Bool)arg2 transient:(_Bool)arg3 useLocking:(_Bool)arg4 withError:(unsigned long long *)arg5;
- (void)rebootContainerManagerCleanupWithCompletion:(CDUnknownBlockType)arg1;
- (void)rebootContainerManagerSetup;
- (void)_cleanupOprhanedCodeSigningMappingData;
- (void)_cleanupOrphanedDataForDirectories:(id)arg1 containerClass:(unsigned long long)arg2;
- (void)containerManagerCleanupWithCompletion:(CDUnknownBlockType)arg1;
- (void)containerManagerSetup;
- (id)_sharedBackgroundQueue;
- (id)initWithClientIdentity:(id)arg1 entitled:(_Bool)arg2 allowOtherIdLookup:(_Bool)arg3 unrestricted:(_Bool)arg4 lookup:(id)arg5 entitledWipeIdentifiers:(id)arg6 commandQueue:(id)arg7;
- (id)init;
- (_Bool)_recoverFromReplaceOperationsWithError:(id *)arg1;
- (_Bool)_writeToDiskReplaceAt:(id)arg1 old:(id)arg2 withNew:(id)arg3 usingStaging:(id)arg4 toDestination:(id)arg5 error:(id *)arg6;
- (id)_readAndValidateReplaceFileAtUrl:(id)arg1 error:(id *)arg2;
- (_Bool)_moveItemAtURLToDeathRow:(id)arg1 isDir:(_Bool)arg2 startDeletionThread:(_Bool)arg3 error:(id *)arg4;
- (_Bool)_createSubDirectories:(id)arg1 containerMetadata:(id)arg2 error:(id *)arg3;
- (_Bool)_removeItemOrMoveToTempAtURL:(id)arg1 error:(id *)arg2;
- (_Bool)_createTopLevelContainerDirectory:(id)arg1 containerClass:(unsigned long long)arg2 owner:(unsigned int)arg3 error:(id *)arg4;

@end

