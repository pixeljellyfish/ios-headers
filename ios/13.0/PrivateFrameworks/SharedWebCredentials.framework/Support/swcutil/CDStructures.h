//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct SWCFields {
    unsigned int userApproval:2;
    unsigned int siteOrFrameworkApproval:2;
    unsigned int updating:1;
    unsigned int systemApplication:1;
    unsigned int readFromDisk:1;
    unsigned int alwaysEnabled:1;
    unsigned int enterpriseManaged:1;
    unsigned int commandLineAddition:1;
};

struct SWCPatternStorage {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    char _field1[0];
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*> *__next_;
};

struct optional<SecTrustResultType> {
    union {
        char _field1;
        unsigned int _field2;
    } _field1;
    _Bool _field2;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<SWCDownloadPriority, NSURLSession *, std::__1::hash<SWCDownloadPriority>, std::__1::equal_to<SWCDownloadPriority>, std::__1::allocator<std::__1::pair<const SWCDownloadPriority, NSURLSession *>>> {
    struct __hash_table<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true>, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true>, std::__1::allocator<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct optional<SecTrustResultType> {
    union {
        char _field1;
        unsigned int _field2;
    } _field1;
    _Bool _field2;
} optional_252cd4e3;

