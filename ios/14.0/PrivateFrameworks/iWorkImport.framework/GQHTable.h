/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:41:43 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/GQHGraphicStyle.h>
#import <iWorkImport/GQTableGenerator.h>

@class NSString;

@interface GQHTable : GQHGraphicStyle <GQTableGenerator>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)mapBaseFillStyleForRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3 isGroupingCell:(BOOL)arg4 ;
+(void)mapCellStyle:(id)arg1 rowIndex:(unsigned short)arg2 rowSpan:(unsigned short)arg3 columnIndex:(unsigned short)arg4 columnSpan:(unsigned short)arg5 state:(id)arg6 cell:(id)arg7 level:(unsigned short)arg8 ;
+(void)getVectorStylesForRowIndex:(unsigned short)arg1 rowSpan:(unsigned short)arg2 columnIndex:(unsigned short)arg3 columnSpan:(unsigned short)arg4 vectorStyles:(id*)arg5 state:(id)arg6 ;
+(void)mapVectorStyles:(id*)arg1 toCellStyle:(id)arg2 state:(id)arg3 ;
+(unsigned short)resolveGroupLevel:(id)arg1 model:(id)arg2 columnIndex:(int)arg3 tableState:(id)arg4 ;
+(void)splitTable:(id)arg1 ;
+(CFStringRef)createTableAttachmentIdWithNumber:(long long)arg1 ;
+(int)mapCellContent:(id)arg1 xml:(id)arg2 state:(id)arg3 ;
+(void)beginRowWithIndex:(unsigned short)arg1 state:(id)arg2 ;
+(void)addMissingCellWithRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3 ;
+(void)addMissingCellsUpToRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3 ;
+(int)beginTable:(id)arg1 state:(id)arg2 ;
+(int)endTable:(id)arg1 state:(id)arg2 ;
+(void)startTableWithTableAnchor:(CFStringRef)arg1 tableHeight:(float)arg2 state:(id)arg3 ;
+(int)beginCells:(id)arg1 state:(id)arg2 ;
+(int)endCells:(id)arg1 state:(id)arg2 ;
+(int)handleCell:(id)arg1 state:(id)arg2 ;
+(const char*)name;
@end

