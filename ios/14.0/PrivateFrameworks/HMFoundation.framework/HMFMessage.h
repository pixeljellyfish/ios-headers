/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:37:52 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFoundation-Structs.h>
#import <HMFoundation/HMFObject.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class HMFMessageInternal, NSUUID, HMFMessageDestination, NSDictionary, NSString, HMFMessageTransport, HMFActivity, HMFLogEventSession;

@interface HMFMessage : HMFObject <NSCopying, NSMutableCopying, NSSecureCoding> {

	HMFMessageInternal* _internal;

}

@property (nonatomic,readonly) HMFMessageInternal * internal;                       //@synthesize internal=_internal - In the implementation block
@property (nonatomic,copy) NSUUID * identifier; 
@property (nonatomic,retain) HMFMessageDestination * destination; 
@property (nonatomic,copy) NSDictionary * messagePayload; 
@property (nonatomic,copy) id responseHandler; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,readonly) double timeout; 
@property (nonatomic,readonly) long long qualityOfService; 
@property (nonatomic,__weak,readonly) HMFMessageTransport * transport; 
@property (nonatomic,readonly) HMFActivity * activity; 
@property (nonatomic,copy,readonly) NSDictionary * userInfo; 
@property (nonatomic,copy,readonly) NSDictionary * headers; 
@property (nonatomic,readonly) HMFLogEventSession * logEventSession; 
+(BOOL)supportsSecureCoding;
+(id)shortDescription;
+(id)messageWithName:(id)arg1 messagePayload:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
+(id)messageWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 payload:(id)arg4 ;
+(id)messageWithName:(id)arg1 destination:(id)arg2 payload:(id)arg3 ;
+(id)supportedClasses;
+(id)messageWithName:(id)arg1 messagePayload:(id)arg2 ;
+(id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 ;
+(id)messageWithMessage:(id)arg1 messagePayload:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
+(id)activityNameWithMessageName:(id)arg1 ;
+(id)messageWithMessage:(id)arg1 messagePayload:(id)arg2 ;
-(id)locationForKey:(id)arg1 ;
-(NSUUID *)identifier;
-(void)setMessagePayload:(NSDictionary *)arg1 ;
-(void)setDestination:(HMFMessageDestination *)arg1 ;
-(id)numberForKey:(id)arg1 ;
-(HMFMessageDestination *)destination;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)descriptionWithPointer:(BOOL)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(double)timeout;
-(long long)qualityOfService;
-(id)arrayForKey:(id)arg1 ;
-(HMFMessageTransport *)transport;
-(id)nullForKey:(id)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(id)responseHandler;
-(id)debugDescription;
-(void)setIdentifier:(NSUUID *)arg1 ;
-(id)shortDescription;
-(void)setResponseHandler:(id)arg1 ;
-(id)uuidForKey:(id)arg1 ;
-(id)dateComponentsForKey:(id)arg1 ;
-(id)dataForKey:(id)arg1 ;
-(id)errorForKey:(id)arg1 ;
-(NSDictionary *)messagePayload;
-(id)init;
-(NSDictionary *)headers;
-(HMFMessageInternal *)internal;
-(BOOL)boolForKey:(id)arg1 keyPresent:(BOOL*)arg2 ;
-(NSDictionary *)userInfo;
-(BOOL)respondWithError:(id)arg1 ;
-(id)setForKey:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)initWithName:(id)arg1 destination:(id)arg2 payload:(id)arg3 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)dateForKey:(id)arg1 ;
-(id)unarchivedObjectForKey:(id)arg1 ofClasses:(id)arg2 ;
-(BOOL)respondWithPayload:(id)arg1 ;
-(HMFActivity *)activity;
-(HMFLogEventSession *)logEventSession;
-(id)predicateForKey:(id)arg1 ;
-(NSString *)name;
-(id)initWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 payload:(id)arg4 ;
-(id)description;
-(BOOL)respondWithSuccess;
-(id)dictionaryForKey:(id)arg1 ;
-(void)setLogEventSession:(HMFLogEventSession *)arg1 ;
-(BOOL)boolForKey:(id)arg1 ;
-(id)timeZoneForKey:(id)arg1 ;
-(BOOL)respondWithPayload:(id)arg1 error:(id)arg2 ;
-(id)arrayOfDateComponentsForKey:(id)arg1 ;
-(id)initWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 userInfo:(id)arg4 headers:(id)arg5 payload:(id)arg6 ;
-(id)calendarForKey:(id)arg1 ;
-(void)__initWithInternalMessage:(id)arg1 ;
-(id)initWithInternalMessage:(id)arg1 ;
-(id)initWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 responseHandler:(/*^block*/id)arg4 ;
@end

