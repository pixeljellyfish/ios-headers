/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:50:23 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/Accounts.framework/Accounts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <Accounts/Accounts-Structs.h>
@class NSMutableDictionary, NSXPCListenerEndpoint, ACRemoteAccountStoreSession, ACTimedExpirer, NSObject, NSString, ACAccount, NSArray;

@interface ACAccountStore : NSObject {

	id _daemonAccountStoreDidChangeObserver;
	NSMutableDictionary* _accountCache;
	NSMutableDictionary* _accountsWithAccountTypeCache;
	NSXPCListenerEndpoint* _endpoint;
	ACRemoteAccountStoreSession* _remoteAccountStoreSession;
	os_unfair_lock_s _remoteAccountStoreSessionLock;
	ACTimedExpirer* _remoteAccountStoreSessionExpirer;
	ACRemoteAccountStoreSession* _longLivedRemoteAccountStoreSession;
	os_unfair_lock_s _longLivedRemoteAccountStoreSessionLock;
	ACTimedExpirer* _longLivedRemoteAccountStoreSessionExpirer;
	NSObject*<OS_dispatch_queue> _replyQueue;
	NSString* _effectiveBundleID;

}

@property (getter=ams_isActiveAccountCombined,nonatomic,readonly) BOOL ams_activeAccountCombined; 
@property (nonatomic,readonly) ACAccount * ams_activeiCloudAccount; 
@property (nonatomic,readonly) ACAccount * ams_activeiTunesAccount; 
@property (nonatomic,readonly) NSArray * ams_iTunesAccounts; 
@property (nonatomic,readonly) NSArray * ams_iTunesAccountsWithHomeUserIdentifiers; 
@property (nonatomic,readonly) ACAccount * ams_localiTunesAccount; 
@property (nonatomic,readonly) NSString * ams_mediaType; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> replyQueue;                                        //@synthesize replyQueue=_replyQueue - In the implementation block
@property (nonatomic,readonly) ACRemoteAccountStoreSession * remoteAccountStoreSession; 
@property (nonatomic,readonly) ACRemoteAccountStoreSession * longLivedRemoteAccountStoreSession; 
@property (readonly) id<ACRemoteAccountStoreSessionDelegate> connectionDelegate; 
@property (readonly) NSString * effectiveBundleID;                                                             //@synthesize effectiveBundleID=_effectiveBundleID - In the implementation block
@property (nonatomic,__weak,readonly) NSArray * accounts; 
+(id)_accountTypesCache;
+(id)ams_sharedAccountStore;
+(id)ams_sharedAccountStoreForMediaType:(id)arg1 ;
+(id)ams_accountTypeIdentifierForMediaType:(id)arg1 ;
+(id)_secureTokenForIdentifier:(id)arg1 ;
+(id)ams_sharedAccountStoreForClient:(id)arg1 ;
+(id)ams_sharedAccountStoreForProcessInfo:(id)arg1 ;
+(BOOL)cls_hasEligibleAccount;
+(long long)countOfAccountsWithAccountTypeIdentifier:(id)arg1 ;
+(int)accountsWithAccountTypeIdentifierExist:(id)arg1 ;
+(BOOL)canSaveAccountsOfAccountTypeIdentifier:(id)arg1 ;
+(id)_obsoleteAccountTypeIDsToRemove;
+(id)_defaultStore;
+(void)_setDefaultStore:(id)arg1 ;
+(void)_setConnectionTimeout:(unsigned long long)arg1 ;
-(void)_daAccountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2 filterOnDataclasses:(BOOL)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)da_loadDAAccountsWithCompletion:(/*^block*/id)arg1 ;
-(void)da_loadDAAccountsWithAccountTypeIdentifiers:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)da_accounts;
-(void)da_loadDAAccountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)da_accountsWithAccountTypeIdentifiers:(id)arg1 ;
-(id)da_accountsWithAccountTypeIdentifiers:(id)arg1 enabledForDADataclasses:(long long)arg2 ;
-(id)da_accountsWithAccountTypeIdentifiers:(id)arg1 outError:(id*)arg2 ;
-(id)_mailAccountTypeIdentifiers;
-(BOOL)hasMailAccountsForSync;
-(id)mailAccountsForSync;
-(id)_ss_accountTypeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)_ss_IDMSAccountForAccount:(id)arg1 error:(id*)arg2 ;
-(id)_ss_iCloudAccountForAccount:(id)arg1 error:(id*)arg2 ;
-(id)_ss_appleAuthenticationAccountForAccount:(id)arg1 error:(id*)arg2 ;
-(id)_correspondingAccountWithAccountTypeIdentifier:(id)arg1 forAccount:(id)arg2 error:(id*)arg3 ;
-(id)_ss_iTunesAccountForAccount:(id)arg1 error:(id*)arg2 ;
-(id)_saveAccount:(id)arg1 verifyCredentials:(BOOL)arg2 ;
-(id)ams_IDMSAccountForAccount:(id)arg1 ;
-(id)ams_secureTokenForAccount:(id)arg1 ;
-(id)ams_cookiesForURL:(id)arg1 ;
-(ACAccount *)ams_activeiCloudAccount;
-(NSString *)ams_mediaType;
-(ACAccount *)ams_activeiTunesAccount;
-(NSArray *)ams_iTunesAccounts;
-(id)ams_iTunesAccountWithAltDSID:(id)arg1 DSID:(id)arg2 username:(id)arg3 ;
-(BOOL)_isAccountNew:(id)arg1 ;
-(ACAccount *)ams_localiTunesAccount;
-(id)ams_saveAccount:(id)arg1 ;
-(id)ams_localiTunesAccountForAccountMediaType:(id)arg1 ;
-(id)_correspondingAccountWithAccountTypeIdentifier:(id)arg1 forAccount:(id)arg2 ;
-(id)_alliTunesAccounts;
-(id)ams_iTunesAccountWithAltDSID:(id)arg1 ;
-(id)ams_iTunesAccountWithDSID:(id)arg1 ;
-(id)_storeClientIdentifier;
-(id)ams_iTunesAccountWithUsername:(id)arg1 ;
-(id)_accountTypeForMediaType:(id)arg1 ;
-(id)ams_localiTunesAccountForAccountType:(id)arg1 ;
-(id)ams_demoAccount;
-(id)_fetchLocaliTunesAccountForAccountType:(id)arg1 ;
-(id)ams_saveAccount:(id)arg1 withOptions:(long long)arg2 ;
-(id)_createLocaliTunesAccountForAccountType:(id)arg1 ;
-(id)ams_saveAccount:(id)arg1 verifyCredentials:(BOOL)arg2 ;
-(id)ams_iTunesAccountForAccount:(id)arg1 ;
-(BOOL)ams_isActiveAccountCombined;
-(BOOL)_addUserCookiesForResponse:(id)arg1 account:(id)arg2 error:(id*)arg3 ;
-(BOOL)_addGlobalCookiesForResponse:(id)arg1 error:(id*)arg2 ;
-(BOOL)ams_addCookiesForResponse:(id)arg1 account:(id)arg2 error:(id*)arg3 ;
-(id)_iTunesAccountsForAccountType:(id)arg1 ;
-(id)ams_accountWithAltDSID:(id)arg1 DSID:(id)arg2 username:(id)arg3 accountTypeIdentifier:(id)arg4 ;
-(id)ams_iTunesAccountForHomeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)ams_iTunesAccountWithHomeUserID:(id)arg1 ;
-(id)ams_mediaAccountForHomeWithIdentifier:(id)arg1 ;
-(id)ams_iTunesAccountWithHomeUserIdentifier:(id)arg1 ;
-(NSArray *)ams_iTunesAccountsWithHomeUserIdentifiers;
-(id)ams_iCloudAccountForAccount:(id)arg1 ;
-(id)ams_fetchGrandSlamTokenForAccount:(id)arg1 withIdentifier:(id)arg2 error:(id*)arg3 ;
-(id)ams_IDSAccountForAccount:(id)arg1 ;
-(id)ams_setiTunesAccount:(id)arg1 forHomeWithIdentifier:(id)arg2 ;
-(BOOL)ams_setSecureToken:(id)arg1 forAccount:(id)arg2 error:(id*)arg3 ;
-(BOOL)ams_addCookiesForResult:(id)arg1 account:(id)arg2 error:(id*)arg3 ;
-(BOOL)ams_addCookiesForResponse:(id)arg1 request:(id)arg2 account:(id)arg3 error:(id*)arg4 ;
-(id)_cachedAccountWithIdentifier:(id)arg1 ;
-(BOOL)ams_removeCookiesMatchingProperties:(id)arg1 error:(id*)arg2 ;
-(id)ams_iTunesAccountsWithHomeUserID;
-(id)ams_iTunesAccountForHomeWithIdentifier:(id)arg1 ;
-(id)ams_iTunesAccountWithHomeID:(id)arg1 ;
-(id)ams_iTunesSandboxAccounts;
-(void)aa_primaryAppleAccountWithCompletion:(/*^block*/id)arg1 ;
-(id)accountWithAppleID:(id)arg1 ;
-(id)aa_grandSlamAccountForAltDSID:(id)arg1 ;
-(id)aa_primaryAppleAccount;
-(id)aa_grandSlamAccountForiCloudAccount:(id)arg1 ;
-(id)aa_authKitAccountForAltDSID:(id)arg1 ;
-(id)accountsWithAccountType:(id)arg1 appleID:(id)arg2 ;
-(id)aa_appleAccounts;
-(void)aa_updatePropertiesForAppleAccount:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_performUpdateRequestWithAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)aa_loginAndUpdateiCloudAccount:(id)arg1 delegateParams:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)aa_appleAccountType;
-(BOOL)aa_isUsingiCloud;
-(id)aa_dataSeparatedAccounts;
-(id)aa_appleAccountsWithError:(id*)arg1 ;
-(id)aa_accountsForAccountClass:(id)arg1 ;
-(id)aa_primaryAppleAccountWithPreloadedDataclasses;
-(void)aa_appleAccountsWithCompletion:(/*^block*/id)arg1 ;
-(id)aa_appleAccountWithUsername:(id)arg1 ;
-(id)aa_appleAccountWithPersonID:(id)arg1 ;
-(id)aa_appleAccountWithAltDSID:(id)arg1 ;
-(id)aa_accountsEnabledForDataclass:(id)arg1 ;
-(id)aa_recommendedAppleIDForAccountSignInWithTypeIdentifier:(id)arg1 ;
-(void)aa_updatePropertiesForAppleAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)aa_loginAndUpdateiCloudAccount:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)aa_registerAppleAccount:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)aa_registerAppleAccountWithHSA:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_cn_canSaveAccount:(id)arg1 ;
-(id)_cn_saveVerifiedAccount:(id)arg1 ;
-(id)_cn_removeAccount:(id)arg1 ;
-(id)cardDAVAccountForPrimaryAppleAccountWithAppleID:(id)arg1 logger:(id)arg2 ;
-(id)fp_primaryAppleAccount;
-(id)accountIDForPersonaIdentifier:(id)arg1 ;
-(id)personaIdentifierForACAccountID:(id)arg1 ;
-(void)aida_renewCredentialsForAccount:(id)arg1 services:(id)arg2 force:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(id)aida_accountForPrimaryiCloudAccount;
-(id)_primaryiCloudAccount;
-(id)aida_iCloudAccountMatchingAppleIDAuthAccount:(id)arg1 ;
-(id)aida_accountForAltDSID:(id)arg1 ;
-(id)aida_accountForiCloudAccount:(id)arg1 ;
-(id)aida_AppleIDAuthenticationAccountType;
-(id)aida_AppleIDAuthenticationAccounts;
-(void)aida_renewCredentialsForAccount:(id)arg1 services:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)handleURL:(id)arg1 ;
-(void)accountsWithAccountTypeIdentifiers:(id)arg1 preloadedProperties:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSString *)effectiveBundleID;
-(void)accountsWithAccountType:(id)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)scheduleBackupIfNonexistent:(/*^block*/id)arg1 ;
-(void)resetDatabaseToVersion:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)setNotificationsEnabled:(BOOL)arg1 ;
-(void)triggerKeychainMigrationIfNecessary:(/*^block*/id)arg1 ;
-(void)removeAccount:(id)arg1 withDataclassActions:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)verifyCredentialsForAccount:(id)arg1 saveWhenAuthorized:(BOOL)arg2 withHandler:(/*^block*/id)arg3 ;
-(id)accountsWithAccountTypeIdentifiers:(id)arg1 preloadedProperties:(id)arg2 error:(id*)arg3 ;
-(void)removeAccountsFromPairedDeviceWithCompletion:(/*^block*/id)arg1 ;
-(void)requestAccessToAccountsWithType:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)cachedAccountsWithAccountType:(id)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)accountsOnPairedDeviceWithAccountType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestAccessToAccountsWithType:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)renewCredentialsForAccount:(id)arg1 force:(BOOL)arg2 reason:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)saveAccount:(id)arg1 withDataclassActions:(id)arg2 doVerify:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)accountsWithAccountTypeIdentifiers:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithRemoteEndpoint:(id)arg1 effectiveBundleID:(id)arg2 ;
-(BOOL)isPerformingDataclassActionsForAccount:(id)arg1 error:(id*)arg2 ;
-(void)renewCredentialsForAccount:(id)arg1 reason:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)dataclassActionsForAccountDeletion:(id)arg1 error:(id*)arg2 ;
-(void)notifyRemoteDevicesOfNewAccount:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)accountsWithAccountTypeIdentifiers:(id)arg1 error:(id*)arg2 ;
-(void)setPermissionGranted:(BOOL)arg1 forBundleID:(id)arg2 onAccountType:(id)arg3 ;
-(BOOL)isPushSupportedForAccount:(id)arg1 ;
-(void)clearAllPermissionsGrantedForAccountType:(id)arg1 ;
-(void)saveVerifiedAccount:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)renewCredentialsForAccount:(id)arg1 services:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)kerberosAccountsForDomainFromURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setCredential:(id)arg1 forAccount:(id)arg2 serviceID:(id)arg3 error:(id*)arg4 ;
-(void)saveCredentialItem:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)accountIdentifiersEnabledToSyncDataclass:(id)arg1 ;
-(void)insertAccountType:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)accountTypeWithAccountTypeIdentifier:(id)arg1 error:(id*)arg2 ;
-(void)_removeObsoleteAccountsInternal:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)saveAccount:(id)arg1 withDataclassActions:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)insertCredentialItem:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)removeCredentialItem:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)removeAccountType:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)removeAccount:(id)arg1 withDeleteSync:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)verifyCredentialsForAccount:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)notifyRemoteDevicesOfUpdatedCredentials:(id)arg1 ;
-(void)_saveAccount:(id)arg1 verify:(BOOL)arg2 dataclassActions:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)childAccountsForAccount:(id)arg1 withTypeIdentifier:(id)arg2 ;
-(int)updateExistenceCacheOfAccountWithTypeIdentifier:(id)arg1 ;
-(id)_removeObsoleteOSXServerAccountForMacOS:(id)arg1 ;
-(id)provisionedDataclassesForAccount:(id)arg1 error:(id*)arg2 ;
-(void)visibleTopLevelAccountsWithAccountTypeIdentifiers:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)renewCredentialsForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removeAccount:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)cachedAccountWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)isPerformingDataclassActionsForAccount:(id)arg1 ;
-(id)displayTypeForAccountWithIdentifier:(id)arg1 ;
-(void)_removeObsoleteOSXServerAccountForiOS:(id)arg1 ;
-(void)saveAccount:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)accountsWithAccountType:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)clearGrantedPermissionsForAccountType:(id)arg1 ;
-(id)accountTypeWithAccountTypeIdentifier:(id)arg1 ;
-(id)syncableDataclassesForAccountType:(id)arg1 ;
-(id)credentialForAccount:(id)arg1 serviceID:(id)arg2 error:(id*)arg3 ;
-(id)dataclassActionsForAccountSave:(id)arg1 error:(id*)arg2 ;
-(id)accountIdentifiersEnabledForDataclass:(id)arg1 ;
-(void)accountTypeWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)initWithEffectiveBundleID:(id)arg1 ;
-(void)canSaveAccount:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)credentialItemForAccount:(id)arg1 serviceName:(id)arg2 ;
-(BOOL)isTetheredSyncingEnabledForDataclass:(id)arg1 ;
-(void)notifyRemoteDevicesOfModifiedAccount:(id)arg1 ;
-(void)disconnectFromRemoteAccountStore;
-(void)notifyRemoteDevicesOfNewAccount:(id)arg1 ;
-(void)reportTelemetryForLandmarkEvent:(/*^block*/id)arg1 ;
-(void)accountWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)grantedPermissionsForAccountType:(id)arg1 ;
-(id)provisionedDataclassesForAccount:(id)arg1 ;
-(id)enabledDataclassesForAccount:(id)arg1 error:(id*)arg2 ;
-(id)_createSMTPAccountForServerAccount:(id)arg1 ;
-(void)accountsWithAccountType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)supportedDataclassesForAccountType:(id)arg1 ;
-(id)dataclassActionsForAccountDeletion:(id)arg1 ;
-(id)tetheredSyncSourceTypeForDataclass:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)replyQueue;
-(BOOL)saveVerifiedAccount:(id)arg1 error:(id*)arg2 ;
-(id)credentialForAccount:(id)arg1 serviceID:(id)arg2 ;
-(id)dataclassActionsForAccountSave:(id)arg1 ;
-(BOOL)hasAccountWithDescription:(id)arg1 ;
-(BOOL)addClientToken:(id)arg1 forAccount:(id)arg2 ;
-(id)_sanitizeOptionsDictionary:(id)arg1 ;
-(id)allAccountTypes;
-(id)credentialForAccount:(id)arg1 error:(id*)arg2 ;
-(void)dealloc;
-(id)parentAccountForAccount:(id)arg1 error:(id*)arg2 ;
-(id)childAccountsForAccount:(id)arg1 error:(id*)arg2 ;
-(id)credentialForAccount:(id)arg1 bundleID:(id)arg2 ;
-(id)appPermissionsForAccountType:(id)arg1 ;
-(id<ACRemoteAccountStoreSessionDelegate>)connectionDelegate;
-(id)enabledDataclassesForAccount:(id)arg1 ;
-(id)accountsWithAccountType:(id)arg1 ;
-(id)_unsanitizeError:(id)arg1 ;
-(id)parentAccountForAccount:(id)arg1 ;
-(id)childAccountsForAccount:(id)arg1 ;
-(id)accessKeysForAccountType:(id)arg1 ;
-(id)typeIdentifierForDomain:(id)arg1 ;
-(BOOL)permissionForAccountType:(id)arg1 ;
-(id)allDataclasses;
-(id)clientTokenForAccount:(id)arg1 ;
-(id)allCredentialItems;
-(void)renewCredentialsForAccount:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)credentialForAccount:(id)arg1 ;
-(void)migrateCredentialForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)verifyCredentialsForAccount:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)accountIdentifiersEnabledForDataclasses:(id)arg1 withAccountTypeIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_clearAccountCaches;
-(ACRemoteAccountStoreSession *)longLivedRemoteAccountStoreSession;
-(id)init;
-(id)_connectionFailureError;
-(id)initWithRemoteEndpoint:(id)arg1 ;
-(void)removeObsoleteAccounts:(/*^block*/id)arg1 ;
-(NSArray *)accounts;
-(void)openAuthenticationURL:(id)arg1 forAccount:(id)arg2 shouldConfirm:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)saveAccount:(id)arg1 toPairedDeviceWithOptions:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)openAuthenticationURLForAccount:(id)arg1 withDelegateClassName:(id)arg2 fromBundleAtPath:(id)arg3 shouldConfirm:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(id)accountWithIdentifier:(id)arg1 ;
-(void)preloadDataclassOwnersWithCompletion:(/*^block*/id)arg1 ;
-(void)shutdownAccountsD:(/*^block*/id)arg1 ;
-(ACRemoteAccountStoreSession *)remoteAccountStoreSession;
-(void)discoverPropertiesForAccount:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)accountWithIdentifier:(id)arg1 error:(id*)arg2 ;
@end

