/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:47:30 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@interface NSAffineTransform : NSObject <NSCopying, NSSecureCoding> {

	SCD_Struct_NS2 _transformStruct;

}

@property (assign) SCD_Struct_NS2 transformStruct; 
+(id)nu_transformWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)pa_transformWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)transformWithXTranslation:(double)arg1 yTranslation:(double)arg2 ;
+(id)transformWithRotationInDegrees:(double)arg1 ;
+(id)transformWithRotationInRadians:(double)arg1 ;
+(id)transformWithXScale:(double)arg1 yScale:(double)arg2 ;
+(id)transformWithTransformStruct:(SCD_Struct_NS2)arg1 ;
+(id)transformWithFlipUsingHeight:(double)arg1 ;
+(id)transformWithScale:(double)arg1 ;
+(id)transform;
-(void)gqu_transformRect:(CGRect)arg1 upperLeft:(CGPoint*)arg2 lowerLeft:(CGPoint*)arg3 lowerRight:(CGPoint*)arg4 upperRight:(CGPoint*)arg5 ;
-(id)description;
-(CGAffineTransform)nu_CGAffineTransform;
-(id)description;
-(CGAffineTransform)pa_CGAffineTransform;
-(Object*)CA_copyRenderValue;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(id)CAMLType;
-(CGAffineTransform)CA_CGAffineTransformValue;
-(unsigned long long)CA_copyNumericValue:(double)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(void)invert;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)debugDescription;
-(void)scaleXBy:(double)arg1 yBy:(double)arg2 ;
-(SCD_Struct_NS2)transformStruct;
-(CGPoint)transformPoint:(CGPoint)arg1 ;
-(CGSize)transformSize:(CGSize)arg1 ;
-(void)translateXBy:(double)arg1 yBy:(double)arg2 ;
-(void)prependTransform:(id)arg1 ;
-(void)rotateByDegrees:(double)arg1 ;
-(void)rotateByRadians:(double)arg1 ;
-(void)appendTransform:(id)arg1 ;
-(id)initWithTransform:(id)arg1 ;
-(id)init;
-(void)setTransformStruct:(SCD_Struct_NS2)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(unsigned long long)hash;
-(void)scaleBy:(double)arg1 ;
@end

