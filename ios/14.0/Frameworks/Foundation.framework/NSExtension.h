/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:47:33 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <libobjc.A.dylib/CXCallDirectoryStoreMigratorExtension.h>

@class NSIndexSet, NSString, NSURL, LSPlugInKitProxy, NSBundle, NSDictionary, NSArray;

@interface NSExtension : NSObject <CXCallDirectoryStoreMigratorExtension>

@property (nonatomic,readonly) NSIndexSet * pu_supportedMediaTypes; 
@property (getter=isEnabledViaPlugInKit,nonatomic,readonly) BOOL enabledViaPlugInKit; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * localizedName; 
@property (nonatomic,readonly) NSString * localizedContainingAppName; 
@property (nonatomic,readonly) NSURL * containingAppURL; 
@property (nonatomic,readonly) LSPlugInKitProxy * plugInKitProxy; 
@property (nonatomic,copy,readonly) NSString * sf_bundleIdentifierForContainingApp; 
@property (readonly) BOOL requiresMacCatalystBehavior; 
@property (readonly) BOOL _wantsProcessPerRequest; 
@property (setter=_setPlugIn:,nonatomic,retain) id<PKPlugIn> _plugIn; 
@property (nonatomic,retain,readonly) NSBundle * _extensionBundle; 
@property (nonatomic,copy,readonly) NSString * _localizedName; 
@property (nonatomic,copy,readonly) NSString * _localizedShortName; 
@property (nonatomic,copy) id _requestPostCompletionBlock; 
@property (nonatomic,copy) id _requestPostCompletionBlockWithItems; 
@property (nonatomic,copy,readonly) NSString * identifier; 
@property (nonatomic,copy,readonly) NSString * version; 
@property (nonatomic,copy,readonly) NSDictionary * attributes; 
@property (nonatomic,copy,readonly) NSDictionary * infoDictionary; 
@property (nonatomic,copy,readonly) NSString * extensionPointIdentifier; 
@property (nonatomic,copy,readonly) NSArray * icons; 
@property (nonatomic,readonly) BOOL optedIn; 
@property (nonatomic,copy) id requestCompletionBlock; 
@property (nonatomic,copy) id requestCancellationBlock; 
@property (nonatomic,copy) id requestInterruptionBlock; 
+(id)_gkExtensionWithIdentifier:(id)arg1 error:(id*)arg2 ;
+(void)extensionsWithMatchingPointName:(id)arg1 baseIdentifier:(id)arg2 activationRule:(id)arg3 unwantedActivationRule:(id)arg4 completion:(/*^block*/id)arg5 ;
+(void)extensionsWithMatchingPointName:(id)arg1 baseIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
+(void)extensionsWithMatchingPointName:(id)arg1 baseIdentifier:(id)arg2 unwantedActivationRule:(id)arg3 completion:(/*^block*/id)arg4 ;
+(void)extensionsWithMatchingPointName:(id)arg1 activationRule:(id)arg2 completion:(/*^block*/id)arg3 ;
+(void)extensionsWithMatchingPointName:(id)arg1 unwantedActivationRule:(id)arg2 completion:(/*^block*/id)arg3 ;
+(void)extensionsWithMatchingPointName:(id)arg1 completion:(/*^block*/id)arg2 ;
+(BOOL)appAllowedToTalkToSiri:(id)arg1 ;
+(void)_matchExtensionsForIntent:(id)arg1 extensionPointName:(id)arg2 shouldCheckForSiriEnabled:(BOOL)arg3 shouldIgnoreLaunchId:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
+(void)_findAppsWithAnyIntentsExtensionCheckingSiriEnabledUseFilter:(long long)arg1 completion:(/*^block*/id)arg2 ;
+(void)_intents_matchExtensionsForIntent:(id)arg1 shouldIgnoreLaunchId:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
+(void)_intents_matchExtensionsForIntent:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)_intents_matchUIExtensionsForIntent:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)_intents_matchSiriExtensionsForIntent:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)_intents_matchSiriUIExtensionsForIntent:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)_intents_matchSiriUISnippetExtensionsWithCompletion:(/*^block*/id)arg1 ;
+(id)_intents_extensionMatchingAttributesForIntents:(id)arg1 ;
+(id)_intents_uiExtensionMatchingAttributesForIntents:(id)arg1 ;
+(void)_intents_findAppsWithAnIntentsServiceExtension:(/*^block*/id)arg1 ;
+(void)_intents_findPossibleSiriEnabledAppsWithAnIntentsServiceExtension:(/*^block*/id)arg1 ;
+(void)_intents_findSiriEntitledAppsContainingAnIntentsExtensionWithCompletion:(/*^block*/id)arg1 ;
+(void)_matchExtensionsForIntent:(id)arg1 extensionPointName:(id)arg2 shouldCheckForSiriEnabled:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
+(void)_matchSnippetExtensionsWithExtensionPointName:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)_extensionMatchingDictionaryForIntentClassNames:(id)arg1 extensionPointName:(id)arg2 launchId:(id)arg3 ;
+(void)_matchExtensionsWithAttributes:(id)arg1 extensionPointName:(id)arg2 completion:(/*^block*/id)arg3 ;
+(id)extensionInfoForCurrentProcess;
+(BOOL)evaluateActivationRule:(id)arg1 withExtensionItemsRepresentation:(id)arg2 ;
+(id)extensionsWithMatchingAttributes:(id)arg1 error:(id*)arg2 ;
+(void)extensionsWithMatchingAttributes:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)extensionWithIdentifier:(id)arg1 excludingDisabledExtensions:(BOOL)arg2 error:(id*)arg3 ;
+(BOOL)_shouldLogExtensionDiscovery;
+(void)extensionWithUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)extensionWithIdentifier:(id)arg1 error:(id*)arg2 ;
+(void)initializeFiltering;
+(id)predicateForActivationRule:(id)arg1 ;
+(BOOL)_evaluateActivationRuleWithoutWorkarounds:(id)arg1 withExtensionItemsRepresentation:(id)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)globalStateQueueForExtension:(id)arg1 ;
+(void)endMatchingExtensions:(id)arg1 ;
+(id)beginMatchingExtensionsWithAttributes:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)extensionWithURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)networkReportDestination;
-(id)SMSReportDestination;
-(id)nc_allowedSectionIdentifiers;
-(id)nc_extensionContainerBundleProxy;
-(id)nc_extensionContainerBundleIdentifier;
-(id)_nc_customSectionIdentifiers;
-(id)_freshCopy;
-(id)siriui_displayName;
-(id)_siriui_iconImageWithFormat:(int)arg1 ;
-(id)_siriui_extensionIconImage;
-(id)siriui_iconImage;
-(id)hd_extensionContainerBundleProxy;
-(id)hd_extensionContainerBundleIdentifier;
-(NSIndexSet *)pu_supportedMediaTypes;
-(BOOL)pu_supportsMediaType:(unsigned long long)arg1 ;
-(long long)processMode;
-(id)wg_description;
-(BOOL)wg_hasExplicitUserElectionState;
-(BOOL)ql_isPreviewExtensionThatHaveCustomPresentationView;
-(id)ql_previewExtensionCustomLoadingTime;
-(id)QL_parentBundleID;
-(BOOL)QL_isAppleExtension;
-(void)_as_instantiateViewControllerWithConnectionHandler:(/*^block*/id)arg1 ;
-(id)_as_auxiliaryRemoteObjectWithRequestID:(id)arg1 ;
-(NSString *)localizedName;
-(BOOL)isEnabledViaPlugInKit;
-(NSString *)localizedContainingAppName;
-(NSURL *)containingAppURL;
-(LSPlugInKitProxy *)plugInKitProxy;
-(NSString *)sf_bundleIdentifierForContainingApp;
-(void)_sf_addHandlerForRequestIdentifier:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(id)_displayName;
-(BOOL)_canSupportIntentClass:(Class)arg1 ;
-(id)_containingAppDisplayName;
-(unsigned long long)_mapExtensionType;
-(id)_iconWithFormat:(int)arg1 ;
-(BOOL)_canSupportIntent:(id)arg1 ;
-(id)_containingAppIdentifer;
-(id)_extensionVendorContextForUUID:(id)arg1 withErrorHandler:(/*^block*/id)arg2 ;
-(id)_cnd_requestWithInputItems:(id)arg1 ;
-(void)_intents_startExtensionConnectionWithExtensionInputItems:(id)arg1 intent:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)uns_extensionContainerBundleIdentifier;
-(BOOL)uns_isExtensionSessionBeingDebugged:(id)arg1 ;
-(id)uns_extensionContainerBundleProxy;
-(void)_instantiateViewControllerWithInputItems:(id)arg1 asAccessory:(BOOL)arg2 listenerEndpoint:(id)arg3 connectionHandler:(/*^block*/id)arg4 ;
-(void)instantiateViewControllerWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 connectionHandler:(/*^block*/id)arg3 ;
-(void)_instantiateAccessoryViewControllerWithInputItems:(id)arg1 connectionHandler:(/*^block*/id)arg2 ;
-(void)instantiateViewControllerWithInputItems:(id)arg1 connectionHandler:(/*^block*/id)arg2 ;
-(id)__UIKit_upcall_icons;
-(id)testFlightServiceExtensionCustomServiceTime;
-(id)testFlightServiceExtensionContainerBundleIdentifier;
-(id)testFlightServiceExtensionContainerBundleProxy;
-(BOOL)_intents_extensionSupportsAtLeastOneSiriIntent;
-(id)_intents_intentsRestrictedWhileProtectedDataUnavailable;
-(BOOL)requiresMacCatalystBehavior;
-(void)_setAllowedErrorClasses:(id)arg1 ;
-(void)beginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_dropAssertion;
-(void)_hostDidEnterBackgroundNote:(id)arg1 ;
-(BOOL)attemptOptOut:(id*)arg1 ;
-(void)_hostWillResignActiveNote:(id)arg1 ;
-(BOOL)attemptOptIn:(id*)arg1 ;
-(id)objectForInfoDictionaryKey:(id)arg1 ;
-(void)_hostWillEnterForegroundNote:(id)arg1 ;
-(void)_safelyEndUsing:(/*^block*/id)arg1 ;
-(id)_init;
-(id)init;
-(id)_extensionContextForUUID:(id)arg1 ;
-(void)_safelyBeginUsing:(/*^block*/id)arg1 ;
-(int)pidForRequestIdentifier:(id)arg1 ;
-(id)beginExtensionRequestWithInputItems:(id)arg1 error:(id*)arg2 ;
-(void)_kill:(int)arg1 ;
-(id)_initWithPKPlugin:(id)arg1 ;
-(id)beginExtensionRequestWithOptions:(unsigned long long)arg1 inputItems:(id)arg2 error:(id*)arg3 ;
-(void)beginExtensionRequestWithInputItems:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)cancelExtensionRequestWithIdentifier:(id)arg1 ;
-(void)beginExtensionRequestWithOptions:(unsigned long long)arg1 inputItems:(id)arg2 listenerEndpoint:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)_isPhotoServiceAccessGranted;
-(void)_hostDidBecomeActiveNote:(id)arg1 ;
-(void)beginExtensionRequestWithOptions:(unsigned long long)arg1 inputItems:(id)arg2 completion:(/*^block*/id)arg3 ;
@end

