/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:47:32 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSString.h>
#import <libobjc.A.dylib/KSWriter.h>

@class NSString;

@interface NSMutableString : NSString <KSWriter>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)axmIndentationString:(long long)arg1 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)stringWithCapacity:(unsigned long long)arg1 ;
-(void)sg_decodeEncodedWords;
-(void)tsu_appendCharacter:(unsigned short)arg1 ;
-(void)tsu_appendSeparator:(id)arg1 format:(id)arg2 ;
-(void)tsu_insertCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2 ;
-(void)tsu_indentBy:(unsigned long long)arg1 ;
-(BOOL)tc_replaceSubstr:(id)arg1 with:(id)arg2 range:(NSRange)arg3 ;
-(void)tc_replaceAllSubstr:(id)arg1 with:(id)arg2 escStr:(id)arg3 ;
-(void)tc_replaceAllSubstr:(id)arg1 with:(id)arg2 escStr:(id)arg3 range:(NSRange)arg4 ;
-(BOOL)tc_replaceSubstr:(id)arg1 with:(id)arg2 ;
-(void)tc_replaceAllSubstr:(id)arg1 with:(id)arg2 ;
-(void)tc_replaceAllSubstr:(id)arg1 with:(id)arg2 range:(NSRange)arg3 ;
-(void)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 ;
-(void)searchAndReplaceInString:(id)arg1 withString:(id)arg2 ;
-(void)gqd_insertCharacter:(unsigned short)arg1 atIndex:(unsigned short)arg2 ;
-(void)tsce_replaceCharactersInSet:(id)arg1 withString:(id)arg2 ;
-(void)tsce_appendSpaces:(int)arg1 ;
-(void)tsce_appendWhitespace:(char*)arg1 startingIndex:(int*)arg2 ;
-(void)tsu_appendCharacter:(unsigned short)arg1 ;
-(void)tsu_appendSeparator:(id)arg1 format:(id)arg2 ;
-(void)tsu_insertCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2 ;
-(void)tsu_indentBy:(unsigned long long)arg1 ;
-(void)siriUIAppendStringWithCommaSeparation:(id)arg1 ;
-(void)crk_deleteSuffix:(id)arg1 ;
-(void)close;
-(void)writeString:(id)arg1 ;
-(void)hf_appendLine:(id)arg1 ;
-(void)hf_appendLineWithFormat:(id)arg1 ;
-(void)psg_removeCharactersFromSet:(id)arg1 ;
-(BOOL)px_removeSuffix:(id)arg1 ;
-(void)replaceBreaksWithPlainTextVersions;
-(void)tsu_appendCharacter:(unsigned short)arg1 ;
-(void)tsu_appendSeparator:(id)arg1 format:(id)arg2 ;
-(void)tsu_insertCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2 ;
-(void)tsu_indentBy:(unsigned long long)arg1 ;
-(void)axmAppendIndentation:(long long)arg1 ;
-(void)addMathIndicators;
-(void)indentBy:(unsigned long long)arg1 ;
-(void)bu_indentBy:(unsigned long long)arg1 ;
-(void)appendToStringAtColumnWithContent:(int*)arg1 column:(unsigned char)arg2 content:(const char*)arg3 appendAsNewLine:(BOOL)arg4 addNewLine:(BOOL)arg5 ;
-(void)appendPrettyObject:(id)arg1 withName:(id)arg2 andIndent:(int)arg3 options:(unsigned long long)arg4 ;
-(void)appendPrettyInt:(long long)arg1 withName:(id)arg2 andIndent:(int)arg3 options:(unsigned long long)arg4 ;
-(void)appendPrettyBOOL:(BOOL)arg1 withName:(id)arg2 andIndent:(int)arg3 options:(unsigned long long)arg4 ;
-(void)ef_rfc5322Unfold;
-(void)ef_removeCharactersInSet:(id)arg1 beforeOccurrencesOfString:(id)arg2 ;
-(void)ef_replaceContiguousSequencesOfCharactersInSet:(id)arg1 withString:(id)arg2 ;
-(void)ef_trimLeadingCharactersInSet:(id)arg1 ;
-(void)ef_trimTrailingCharactersInSet:(id)arg1 ;
-(void)ef_appendSQLEscapedString:(id)arg1 ;
-(void)ef_appendQuotedSQLEscapedString:(id)arg1 ;
-(void)hk_appendComponentsJoinedByString:(id)arg1 container:(id)arg2 componentGenerator:(/*^block*/id)arg3 ;
-(void)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 ;
-(void)searchAndReplaceInString:(id)arg1 withString:(id)arg2 ;
-(void)ams_appendNullableString:(id)arg1 ;
-(void)_cn_trim;
-(unsigned long long)_cn_replaceStrings:(id)arg1 ;
-(void)_cn_deleteCharactersInSet:(id)arg1 ;
-(void)_cn_trimLeadingWhitespace;
-(void)_cn_trimTrailingWhitespace;
-(void)_cn_deleteCharactersInSet:(id)arg1 options:(unsigned long long)arg2 ;
-(void)_cn_appendNonNilString:(id)arg1 ;
-(void)dd_appendSpaces:(unsigned)arg1 ;
-(void)_replaceOccurrencesOfCharacter:(unsigned)arg1 withCharacter:(unsigned)arg2 ;
-(void)_removeCharactersFromSet:(CFCharacterSetRef)arg1 ;
-(void)_removeOccurrencesOfCharacter:(unsigned)arg1 ;
-(void)appendPrettyObject:(id)arg1 withName:(id)arg2 indent:(int)arg3 showFullContent:(BOOL)arg4 ;
-(void)appendPrettyBOOL:(BOOL)arg1 withName:(id)arg2 indent:(int)arg3 ;
-(void)appendPrettyInt:(int)arg1 withName:(id)arg2 indent:(int)arg3 ;
-(void)replaceNewlinesWithSpaces;
-(id)controlCharacterSet;
-(void)_ICSStripControlChracters;
-(void)_ICSEscapePropertyValue;
-(void)_ICSEscapeParameterValue;
-(void)_ICSEscapeParameterQuotedValue;
-(void)_ICSRemoveCharactersFromSet:(id)arg1 ;
-(void)_cfAppendCString:(const char*)arg1 length:(long long)arg2 ;
-(void)_cfTrim:(CFStringRef)arg1 ;
-(void)_cfTrimWS;
-(void)_cfLowercase:(const void*)arg1 ;
-(void)_cfUppercase:(const void*)arg1 ;
-(void)_cfNormalize:(long long)arg1 ;
-(void)_cfCapitalize:(const void*)arg1 ;
-(void)appendString:(id)arg1 ;
-(void)_cfPad:(CFStringRef)arg1 length:(unsigned)arg2 padIndex:(unsigned)arg3 ;
-(void)appendFormat:(id)arg1 ;
-(void)replaceCharactersInRange:(NSRange)arg1 withString:(id)arg2 ;
-(unsigned long long)_replaceOccurrencesOfRegularExpressionPattern:(id)arg1 withTemplate:(id)arg2 options:(unsigned long long)arg3 range:(NSRange)arg4 ;
-(void)replaceCharactersInRange:(NSRange)arg1 withCharacters:(const unsigned short*)arg2 length:(unsigned long long)arg3 ;
-(void)replaceCharactersInRange:(NSRange)arg1 withCString:(const char*)arg2 length:(unsigned long long)arg3 ;
-(BOOL)applyTransform:(id)arg1 reverse:(BOOL)arg2 range:(NSRange)arg3 updatedRange:(NSRange*)arg4 ;
-(void)setString:(id)arg1 ;
-(id)initWithCapacity:(unsigned long long)arg1 ;
-(Class)classForCoder;
-(unsigned long long)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(NSRange)arg4 ;
-(void)_trimWithCharacterSet:(id)arg1 ;
-(void)deleteCharactersInRange:(NSRange)arg1 ;
-(void)appendCharacters:(const unsigned short*)arg1 length:(unsigned long long)arg2 ;
-(void)insertString:(id)arg1 atIndex:(unsigned long long)arg2 ;
@end

