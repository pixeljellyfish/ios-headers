/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:50:21 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <libobjc.A.dylib/INJSONSerializable.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSString, NSCalendar, NSTimeZone, NSDate;

@interface NSDateComponents : NSObject <INJSONSerializable, NSCopying, NSSecureCoding>

@property (copy,readonly) NSString * hmf_localTimeDescription; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSCalendar * calendar; 
@property (copy) NSTimeZone * timeZone; 
@property (assign) long long era; 
@property (assign) long long year; 
@property (assign) long long month; 
@property (assign) long long day; 
@property (assign) long long hour; 
@property (assign) long long minute; 
@property (assign) long long second; 
@property (assign) long long nanosecond; 
@property (assign) long long weekday; 
@property (assign) long long weekdayOrdinal; 
@property (assign) long long quarter; 
@property (assign) long long weekOfMonth; 
@property (assign) long long weekOfYear; 
@property (assign) long long yearForWeekOfYear; 
@property (getter=isLeapMonth) BOOL leapMonth; 
@property (copy,readonly) NSDate * date; 
@property (getter=isValidDate,readonly) BOOL validDate; 
+(id)hmf_unarchiveFromData:(id)arg1 error:(id*)arg2 ;
+(id)hk_oneDay;
+(id)hk_oneWeek;
+(id)hk_componentsWithDays:(long long)arg1 ;
+(id)hk_dateComponentsForCalendarUnit:(unsigned long long)arg1 ;
+(id)hk_componentsWithDayIndex:(long long)arg1 calendar:(id)arg2 ;
+(id)hk_componentsWithHour:(long long)arg1 minute:(long long)arg2 ;
+(id)CalComponentForYears:(long long)arg1 ;
+(id)CalComponentForMinutes:(long long)arg1 ;
+(id)CalComponentForHours:(long long)arg1 ;
+(id)CalComponentForDays:(long long)arg1 ;
+(id)CalComponentForWeeks:(long long)arg1 ;
+(id)CalComponentForMonths:(long long)arg1 ;
+(id)CalComponentsWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6 ;
+(unsigned long long)smaller:(BOOL)arg1 componentsRelativeToComponent:(unsigned long long)arg2 ;
+(unsigned long long)_ui_largerComponentsRelativeToComponent:(unsigned long long)arg1 ;
+(unsigned long long)_ui_smallerComponentsRelativeToComponent:(unsigned long long)arg1 ;
+(id)_ui_namesForComponents:(unsigned long long)arg1 ;
+(id)_cn_dateComponentsFromDictionary:(id)arg1 ;
+(id)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3 ;
+(BOOL)supportsSecureCoding;
+(id)allocWithZone:(NSZone*)arg1 ;
-(Class)contactViewControllerCellClassForPropertyType:(id)arg1 ;
-(id)displayString;
-(NSString *)hmf_localTimeDescription;
-(id)localTimeDescription;
-(id)hk_dayIndexDateDescription;
-(long long)hk_maxComponentValue;
-(double)hk_approximateDuration;
-(id)_hk_dateByAddingFilteredInterval:(long long)arg1 toDate:(id)arg2 ;
-(id)hk_dateByAddingInterval:(long long)arg1 toDate:(id)arg2 ;
-(id)hk_populatedCalendarGregorianCalendarDefault;
-(id)hk_negativeComponents;
-(id)hk_translateDateComponentsToCalendar:(id)arg1 calendarUnits:(unsigned long long)arg2 ;
-(long long)hk_ageWithCurrentDate:(id)arg1 ;
-(long long)hk_dayIndex;
-(id)hk_hourNumber;
-(id)hk_minuteNumber;
-(id)hk_dateOptionalDescription;
-(BOOL)CalIsSameMonthAsComponents:(id)arg1 ;
-(BOOL)CalIsSameYearAsComponents:(id)arg1 ;
-(BOOL)CalIsSameDayAsComponents:(id)arg1 ;
-(id)CalRepresentedDate;
-(void)_ui_setComponents:(id)arg1 ;
-(id)_ui_conciseDescription;
-(long long)_ui_valueForComponent:(unsigned long long)arg1 ;
-(void)_ui_setValue:(long long)arg1 forComponent:(unsigned long long)arg2 ;
-(BOOL)_cn_isEmpty;
-(id)_cn_dictionaryRepresentation;
-(id)_intents_readableTitleWithLocalizer:(id)arg1 metadata:(id)arg2 ;
-(id)_intents_encodeWithJSONEncoder:(id)arg1 codableDescription:(id)arg2 ;
-(BOOL)isSameMonthAsComponents:(id)arg1 ;
-(BOOL)isSameYearAsComponents:(id)arg1 ;
-(BOOL)isSameDayAsComponents:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(long long)week;
-(void)setEra:(long long)arg1 ;
-(long long)quarter;
-(long long)weekday;
-(void)setQuarter:(long long)arg1 ;
-(long long)weekOfMonth;
-(void)setWeekday:(long long)arg1 ;
-(long long)nanosecond;
-(BOOL)isLeapMonth;
-(long long)hour;
-(BOOL)isValidDate;
-(void)setWeekOfMonth:(long long)arg1 ;
-(_CFDateComponents*)_dateComponents;
-(void)setLeapMonth:(BOOL)arg1 ;
-(void)setNanosecond:(long long)arg1 ;
-(void)setWeekOfYear:(long long)arg1 ;
-(long long)weekdayOrdinal;
-(BOOL)isLeapMonthSet;
-(long long)yearForWeekOfYear;
-(BOOL)isValidDateInCalendar:(id)arg1 ;
-(void)setWeekdayOrdinal:(long long)arg1 ;
-(void)setYearForWeekOfYear:(long long)arg1 ;
-(id)_initWithCFDateComponents:(_CFDateComponents*)arg1 ;
-(long long)second;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSCalendar *)calendar;
-(NSDate *)date;
-(long long)month;
-(void)setWeek:(long long)arg1 ;
-(void)setHour:(long long)arg1 ;
-(void)setSecond:(long long)arg1 ;
-(void)dealloc;
-(long long)day;
-(long long)valueForComponent:(unsigned long long)arg1 ;
-(void)setCalendar:(NSCalendar *)arg1 ;
-(void)setMonth:(long long)arg1 ;
-(long long)year;
-(void)setDay:(long long)arg1 ;
-(id)init;
-(void)setValue:(long long)arg1 forComponent:(unsigned long long)arg2 ;
-(BOOL)isEqual:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setYear:(long long)arg1 ;
-(NSTimeZone *)timeZone;
-(void)encodeWithCoder:(id)arg1 ;
-(long long)weekOfYear;
-(unsigned long long)hash;
-(long long)minute;
-(long long)era;
-(NSString *)description;
-(void)setMinute:(long long)arg1 ;
-(void)setTimeZone:(NSTimeZone *)arg1 ;
@end

