/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:50:21 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <libobjc.A.dylib/EFSQLValueCollectionExpressable.h>
#import <libobjc.A.dylib/HMFObject.h>
#import <libobjc.A.dylib/HKUUIDCollection.h>
#import <libobjc.A.dylib/PQLBindable.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSFastEnumeration.h>

@class NSString, NSArray;

@interface NSSet : NSObject <EFSQLValueCollectionExpressable, HMFObject, HKUUIDCollection, PQLBindable, NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (nonatomic,readonly) NSSet * ef_notEmpty; 
@property (nonatomic,readonly) NSSet * ef_flatten; 
@property (nonatomic,copy,readonly) NSString * ef_SQLExpression; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=hmf_isEmpty,readonly) BOOL hmf_empty; 
@property (copy,readonly) NSString * shortDescription; 
@property (copy,readonly) NSString * privateDescription; 
@property (copy,readonly) NSString * propertyDescription; 
@property (nonatomic,copy,readonly) NSArray * attributeDescriptions; 
@property (readonly) unsigned long long count; 
+(id)ams_JSONClasses;
+(id)ams_PLISTClasses;
+(id)shortDescription;
+(id)na_setWithSafeObject:(id)arg1 ;
+(id)hk_typesForSetOf:(Class)arg1 ;
+(id)hk_typesForArrayOf:(Class)arg1 ;
+(id)hk_setByUnioningSet:(id)arg1 otherSet:(id)arg2 ;
+(id)hk_typesForDictionaryMapping:(Class)arg1 to:(Class)arg2 ;
+(id)intersectionOfSet:(id)arg1 withSet:(id)arg2 ;
+(id)setWithUnionOfSets:(id)arg1 ;
+(id)setWithTrackedSet:(id)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)set;
+(id)setWithObjects:(id)arg1 ;
+(id)setWithObject:(id)arg1 ;
+(id)setWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
+(id)setWithOrderedSet:(id)arg1 range:(NSRange)arg2 copyItems:(BOOL)arg3 ;
+(id)setWithArray:(id)arg1 range:(NSRange)arg2 ;
+(id)setWithOrderedSet:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)setWithSet:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)newSetWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
+(id)setWithOrderedSet:(id)arg1 range:(NSRange)arg2 ;
+(id)setWithOrderedSet:(id)arg1 ;
+(id)setWithArray:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)setWithArray:(id)arg1 range:(NSRange)arg2 copyItems:(BOOL)arg3 ;
+(id)setWithArray:(id)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)setWithSet:(id)arg1 ;
+(id)allocWithZone:(NSZone*)arg1 ;
-(void)ph_enumerateIntersectionWithSet:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)DACompactDescription;
-(id)_pl_prettyDescriptionWithIndent:(long long)arg1 ;
-(unsigned long long)pl_countOfObjectsPassingTest:(/*^block*/id)arg1 ;
-(id)_pl_filter:(/*^block*/id)arg1 ;
-(id)_pl_map:(/*^block*/id)arg1 ;
-(id)_pl_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(id)dc_objectPassingTest:(/*^block*/id)arg1 ;
-(BOOL)dc_containsObjectPassingTest:(/*^block*/id)arg1 ;
-(id)dc_objectsOfClass:(Class)arg1 ;
-(id)setByIntersectingWithSet:(id)arg1 ;
-(void)ef_renderSQLExpressionInto:(id)arg1 conjoiner:(id)arg2 ;
-(id)ef_flatMap:(/*^block*/id)arg1 ;
-(NSString *)ef_SQLExpression;
-(NSSet *)ef_notEmpty;
-(id)ef_SQLIsolatedExpression;
-(BOOL)ef_any:(/*^block*/id)arg1 ;
-(BOOL)ef_all:(/*^block*/id)arg1 ;
-(unsigned long long)ef_countObjectsPassingTest:(/*^block*/id)arg1 ;
-(id)ef_anyPassingTest:(/*^block*/id)arg1 ;
-(void)ef_renderSQLExpressionInto:(id)arg1 ;
-(id)ef_filter:(/*^block*/id)arg1 ;
-(id)ef_partition:(/*^block*/id)arg1 ;
-(id)ef_compactMap:(/*^block*/id)arg1 ;
-(NSSet *)ef_flatten;
-(id)safari_smallestObject:(/*^block*/id)arg1 ;
-(id)safari_anyObjectPassingTest:(/*^block*/id)arg1 ;
-(BOOL)safari_allObjectsPassTest:(/*^block*/id)arg1 ;
-(id)safari_arrayByMappingObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)safari_mapAndFilterObjectsUsingBlock:(/*^block*/id)arg1 ;
-(BOOL)safari_containsObjectPassingTest:(/*^block*/id)arg1 ;
-(id)safari_shortestURL;
-(id)safari_setByRemovingObject:(id)arg1 ;
-(id)safari_sortedArrayUsingFinderLikeSorting;
-(id)ax_makeObjectsRespondToSelector:(SEL)arg1 ;
-(id)setByRemovingObject:(id)arg1 ;
-(id)setByIntersectingSet:(id)arg1 ;
-(id)setByMinusingSet:(id)arg1 ;
-(id)ams_mapWithTransform:(/*^block*/id)arg1 ;
-(id)ams_filterUsingTest:(/*^block*/id)arg1 ;
-(id)ams_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(id)ams_nonEmptyComponentsJoinedByString:(id)arg1 ;
-(NSString *)privateDescription;
-(NSString *)shortDescription;
-(BOOL)hmf_isEmpty;
-(id)hmf_addedObjectsFromSet:(id)arg1 ;
-(id)hmf_commonObjectsFromSet:(id)arg1 ;
-(id)hmf_removedObjectsFromSet:(id)arg1 ;
-(id)na_flatMap:(/*^block*/id)arg1 ;
-(id)na_dictionaryByBucketingObjectsUsingKeyGenerator:(/*^block*/id)arg1 ;
-(id)na_setByFlattening;
-(BOOL)na_all:(/*^block*/id)arg1 ;
-(id)na_map:(/*^block*/id)arg1 ;
-(BOOL)na_any:(/*^block*/id)arg1 ;
-(id)na_dictionaryWithKeyGenerator:(/*^block*/id)arg1 ;
-(void)na_each:(/*^block*/id)arg1 ;
-(id)na_setByDiffingWithSet:(id)arg1 ;
-(id)na_reduceWithInitialValue:(id)arg1 reducer:(/*^block*/id)arg2 ;
-(id)na_setByIntersectingWithSet:(id)arg1 ;
-(id)na_setByRemovingObjectsFromSet:(id)arg1 ;
-(id)na_filter:(/*^block*/id)arg1 ;
-(id)na_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(BOOL)na_allObjectsPassTest:(/*^block*/id)arg1 ;
-(BOOL)na_safeContainsObject:(id)arg1 ;
-(id)hk_mapToDictionary:(/*^block*/id)arg1 ;
-(BOOL)hk_allObjectsPassTestWithError:(id*)arg1 test:(/*^block*/id)arg2 ;
-(id)hk_map:(/*^block*/id)arg1 ;
-(BOOL)hk_containsObjectPassingTest:(/*^block*/id)arg1 ;
-(id)hk_firstSortedObjectWithComparison:(/*^block*/id)arg1 ;
-(id)hk_minus:(id)arg1 ;
-(id)hk_filter:(/*^block*/id)arg1 ;
-(id)hk_intersection:(id)arg1 ;
-(id)hk_anyObjectPassingTest:(/*^block*/id)arg1 ;
-(BOOL)hk_enumerateUUIDsWithError:(id*)arg1 block:(/*^block*/id)arg2 ;
-(id)hk_dataForAllUUIDs;
-(id)CalMutableRecursiveCopy;
-(id)allObjectsWithClass:(Class)arg1 ;
-(id)aa_setByRemovingObject:(id)arg1 ;
-(id)aa_setByRemovingObjectsFromSet:(id)arg1 ;
-(id)_cn_indexBy:(/*^block*/id)arg1 ;
-(id)_cn_map:(/*^block*/id)arg1 ;
-(BOOL)_cn_any:(/*^block*/id)arg1 ;
-(id)_cn_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(id)_cn_filter:(/*^block*/id)arg1 ;
-(void)sqliteBind:(sqlite3_stmtRef)arg1 index:(int)arg2 ;
-(id)af_mappedSet:(/*^block*/id)arg1 ;
-(id)af_mappedDictionary:(/*^block*/id)arg1 ;
-(id)CAMLType;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(void)CKAssignToContainerWithID:(id)arg1 ;
-(BOOL)mr_containsObjectUsingWeakMatching:(id)arg1 ;
-(id)if_map:(/*^block*/id)arg1 ;
-(id)if_compactMap:(/*^block*/id)arg1 ;
-(id)ac_map:(/*^block*/id)arg1 ;
-(id)ac_mapNullable:(/*^block*/id)arg1 ;
-(id)initWithTrackedSet:(id)arg1 ;
-(id)bs_map:(/*^block*/id)arg1 ;
-(void)bs_each:(/*^block*/id)arg1 ;
-(id)bs_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(id)bs_filter:(/*^block*/id)arg1 ;
-(id)bs_compactMap:(/*^block*/id)arg1 ;
-(BOOL)bs_containsObjectPassingTest:(/*^block*/id)arg1 ;
-(id)bs_reduce:(id)arg1 block:(/*^block*/id)arg2 ;
-(id)__imDeepCopy;
-(void)__imForEach:(/*^block*/id)arg1 ;
-(id)__imSetByApplyingBlock:(/*^block*/id)arg1 ;
-(id)ax_mappedSetUsingBlock:(/*^block*/id)arg1 ;
-(id)ax_filteredSetUsingBlock:(/*^block*/id)arg1 ;
-(id)ax_flatMappedSetUsingBlock:(/*^block*/id)arg1 ;
-(id)_maxForKeyPath:(id)arg1 ;
-(id)_avgForKeyPath:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(Class)classForCoder;
-(id)_sumForKeyPath:(id)arg1 ;
-(id)_distinctUnionOfSetsForKeyPath:(id)arg1 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)filteredSetUsingPredicate:(id)arg1 ;
-(id)_countForKeyPath:(id)arg1 ;
-(id)sortedArrayUsingDescriptors:(id)arg1 ;
-(id)_distinctUnionOfObjectsForKeyPath:(id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)_distinctUnionOfArraysForKeyPath:(id)arg1 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)_minForKeyPath:(id)arg1 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3 ;
-(BOOL)isNSSet__;
-(void)getObjects:(id*)arg1 ;
-(id)member:(id)arg1 ;
-(BOOL)intersectsSet:(id)arg1 ;
-(id)objectsWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2 ;
-(id)initWithArray:(id)arg1 range:(NSRange)arg2 copyItems:(BOOL)arg3 ;
-(void)__applyValues:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(id)initWithOrderedSet:(id)arg1 range:(NSRange)arg2 copyItems:(BOOL)arg3 ;
-(BOOL)__getValue:(id*)arg1 forObj:(id)arg2 ;
-(id)objectWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)objectPassingTest:(/*^block*/id)arg1 ;
-(id)initWithArray:(id)arg1 range:(NSRange)arg2 ;
-(id)initWithOrderedSet:(id)arg1 range:(NSRange)arg2 ;
-(BOOL)intersectsOrderedSet:(id)arg1 ;
-(BOOL)isSubsetOfOrderedSet:(id)arg1 ;
-(id)initWithOrderedSet:(id)arg1 copyItems:(BOOL)arg2 ;
-(unsigned long long)_cfTypeID;
-(id)members:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithArray:(id)arg1 ;
-(id)initWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
-(void)getObjects:(id*)arg1 range:(NSRange)arg2 ;
-(id)objectEnumerator;
-(id)anyObject;
-(id)allObjects;
-(BOOL)isEqualToSet:(id)arg1 ;
-(BOOL)isSubsetOfSet:(id)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)objectsPassingTest:(/*^block*/id)arg1 ;
-(void)makeObjectsPerformSelector:(SEL)arg1 ;
-(id)initWithObjects:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(id)setByAddingObjectsFromSet:(id)arg1 ;
-(id)initWithSet:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)sortedArrayUsingComparator:(/*^block*/id)arg1 ;
-(void)enumerateObjectsUsingBlock:(/*^block*/id)arg1 ;
-(BOOL)containsObject:(id)arg1 ;
-(id)initWithObject:(id)arg1 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS26*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)initWithSet:(id)arg1 copyItems:(BOOL)arg2 ;
-(void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)setByAddingObjectsFromArray:(id)arg1 ;
-(void)getObjects:(id*)arg1 count:(unsigned long long)arg2 ;
-(BOOL)isEqual:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)count;
-(id)setByAddingObject:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithArray:(id)arg1 copyItems:(BOOL)arg2 ;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(id)initWithOrderedSet:(id)arg1 ;
-(unsigned long long)hash;
-(id)sortedArrayWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/id)arg2 ;
-(NSString *)description;
@end

