/*
* This header is generated by classdump-dyld 1.0
* on Thursday, September 24, 2020 at 12:50:22 AM British Summer Time
* Operating System: Version 14.0 (Build 18A373)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreFoundation/CoreFoundation-Structs.h>
@class NSArray;

@interface NSUserDefaults : NSObject {

	id _kvo_;
	CFStringRef _identifier_;
	CFStringRef _container_;
	void** _reserved[2];

}

@property (assign,setter=hk_setElectrocardiogramSetupModalViewPresented:,getter=hk_electrocardiogramSetupModalViewHasBeenPresented,nonatomic) BOOL hk_electrocardiogramSetupModalViewPresented; 
@property (assign,setter=hk_setAtrialFibrillationSetupModalViewPresented:,getter=hk_atrialFibrillationSetupModalViewHasBeenPresented,nonatomic) BOOL hk_atrialFibrillationSetupModalViewPresented; 
@property (setter=hk_setDemoResultKeys:,nonatomic,retain) NSArray * hk_demoResultKeys; 
@property (nonatomic,readonly) BOOL hk_hfeModeEnabled; 
@property (assign,setter=hk_setElectrocardiogramWatchAppInstallIsAllowed:,getter=hk_electrocardiogramWatchAppInstallHasBeenAllowed,nonatomic) BOOL hk_electrocardiogramWatchAppInstallIsAllowed; 
+(id)mf_copyCompositionServicesPreferenceValueForKey:(id)arg1 ;
+(void)mf_setCompositionServicesPreferenceValue:(id)arg1 forKey:(id)arg2 ;
+(id)em_userDefaults;
+(BOOL)em_defaultExistsForKey:(id)arg1 ;
+(void)em_migrateDefault:(id)arg1 ;
+(id)safari_notificationNameForUserDefaultsKey:(id)arg1 ;
+(id)safari_cloudBookmarksDefaults;
+(BOOL)safari_passwordManagerIsInDemoMode;
+(id)hk_heartRhythmDefaults;
+(id)hk_remoteFeatureAvailabilityUserDefaults;
+(id)_webkit_preferredLanguageCode;
+(id)c2DefaultsDomain;
+(id)_IMAppObjectForKey:(id)arg1 ;
+(id)_IMAgentObjectForKey:(id)arg1 ;
+(void)_IMSetObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3 ;
+(id)_IMObjectForKey:(id)arg1 inDomain:(id)arg2 ;
+(id)_copyStandardUserDefaultsIfPresent;
+(void)_ensureAndLockPreferredLanguageLock;
+(id)_web_preferredLanguageCode;
+(void)_web_addDefaultsChangeObserver;
+(void)resetStandardUserDefaults;
+(void)setStandardUserDefaults:(id)arg1 ;
+(void)_web_defaultsDidChange;
+(id)standardUserDefaults;
-(void)nf_migrateObjectForKey:(id)arg1 toKey:(id)arg2 ;
-(id)safari_numberForKey:(id)arg1 ;
-(id)safari_dateForKey:(id)arg1 ;
-(BOOL)safari_toggleBoolForKey:(id)arg1 ;
-(void)safari_incrementNumberForKey:(id)arg1 ;
-(void)safari_setDate:(id)arg1 forKey:(id)arg2 ;
-(void)safari_setInteger:(long long)arg1 andNotifyForKey:(id)arg2 ;
-(void)safari_setBool:(BOOL)arg1 andNotifyForKey:(id)arg2 ;
-(BOOL)safari_toggleBoolAndNotifyForKey:(id)arg1 ;
-(BOOL)safari_boolForKey:(id)arg1 defaultValue:(BOOL)arg2 ;
-(id)safari_observeValueForKey:(id)arg1 onQueue:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)hk_setElectrocardiogramSetupModalViewPresented:(BOOL)arg1 ;
-(BOOL)hk_electrocardiogramWatchAppInstallHasBeenAllowed;
-(void)hk_setElectrocardiogramWatchAppInstallIsAllowed:(BOOL)arg1 ;
-(BOOL)hk_electrocardiogramSetupModalViewHasBeenPresented;
-(BOOL)hk_atrialFibrillationSetupModalViewHasBeenPresented;
-(void)hk_setAtrialFibrillationSetupModalViewPresented:(BOOL)arg1 ;
-(NSArray *)hk_demoResultKeys;
-(void)hk_setDemoResultKeys:(id)arg1 ;
-(BOOL)hk_hfeModeEnabled;
-(BOOL)hk_keyExists:(id)arg1 ;
-(void)hk_removeObjectsForKeysWithPrefix:(id)arg1 ;
-(id)doc_roleSpecificKeyForKey:(id)arg1 configuration:(id)arg2 ;
-(void)doc_setObject:(id)arg1 forRoleKey:(id)arg2 configuation:(id)arg3 ;
-(id)doc_roleSpecificKeyForKey:(id)arg1 configuration:(id)arg2 ;
-(void)doc_setObject:(id)arg1 forRoleKey:(id)arg2 configuation:(id)arg3 ;
-(BOOL)boolValueSafeForKey:(id)arg1 status:(int*)arg2 ;
-(long long)int64ValueSafeForKey:(id)arg1 status:(int*)arg2 ;
-(double)doubleValueSafeForKey:(id)arg1 status:(int*)arg2 ;
-(id)stringValueSafeForKey:(id)arg1 status:(int*)arg2 ;
-(const char*)utf8ValueSafeForKey:(id)arg1 status:(int*)arg2 ;
-(BOOL)boolValueSafeForKey:(id)arg1 ;
-(long long)int64ValueSafeForKey:(id)arg1 ;
-(double)doubleValueSafeForKey:(id)arg1 ;
-(id)stringValueSafeForKey:(id)arg1 ;
-(const char*)utf8ValueSafeForKey:(id)arg1 ;
-(void)bs_setDomain:(id)arg1 ;
-(BOOL)bs_defaultExists:(id)arg1 ;
-(double)doubleForKey:(id)arg1 ;
-(void)setLong:(long long)arg1 forKey:(id)arg2 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3 ;
-(id)arrayForKey:(id)arg1 ;
-(id)URLForKey:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(oneway void)release;
-(long long)integerForKey:(id)arg1 ;
-(id)searchList;
-(id)initWithSuiteName:(id)arg1 ;
-(void)setInteger:(long long)arg1 forKey:(id)arg2 ;
-(void)dealloc;
-(void)registerDefaults:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(void)finalize;
-(id)initWithUser:(id)arg1 ;
-(void)_willBeginKeyValueObserving;
-(id)dataForKey:(id)arg1 ;
-(void)setVolatileDomain:(id)arg1 forName:(id)arg2 ;
-(void)removePersistentDomainForName:(id)arg1 ;
-(BOOL)objectIsForcedForKey:(id)arg1 inDomain:(id)arg2 ;
-(void)_didEndKeyValueObserving;
-(void)setDouble:(double)arg1 forKey:(id)arg2 ;
-(id)_initWithSuiteName:(id)arg1 container:(id)arg2 ;
-(id)init;
-(long long)longForKey:(id)arg1 ;
-(float)floatForKey:(id)arg1 ;
-(id)persistentDomainForName:(id)arg1 ;
-(void)setURL:(id)arg1 forKey:(id)arg2 ;
-(void)setSearchList:(id)arg1 ;
-(void)addSuiteNamed:(id)arg1 ;
-(void)setBool:(BOOL)arg1 forKey:(id)arg2 ;
-(void)setPersistentDomain:(id)arg1 forName:(id)arg2 ;
-(void)removeSuiteNamed:(id)arg1 ;
-(void)removeObjectForKey:(id)arg1 inDomain:(id)arg2 ;
-(void)removeVolatileDomainForName:(id)arg1 ;
-(id)volatileDomainForName:(id)arg1 ;
-(id)persistentDomainNames;
-(BOOL)objectIsForcedForKey:(id)arg1 ;
-(id)stringArrayForKey:(id)arg1 ;
-(id)objectForKey:(id)arg1 inDomain:(id)arg2 ;
-(void)removeObjectForKey:(id)arg1 ;
-(id)volatileDomainNames;
-(void)setFloat:(float)arg1 forKey:(id)arg2 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)objectForKey:(id)arg1 ;
-(BOOL)synchronize;
-(id)dictionaryForKey:(id)arg1 ;
-(id)dictionaryRepresentation;
-(BOOL)boolForKey:(id)arg1 ;
-(CFStringRef)_container;
-(BOOL)_observingCFPreferences;
-(void)_setIdentifier:(CFStringRef)arg1 ;
-(void)_setContainer:(CFURLRef)arg1 ;
-(CFStringRef)_identifier;
@end

